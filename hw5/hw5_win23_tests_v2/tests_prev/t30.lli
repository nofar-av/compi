@.intFormat = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @print_string(i8*) {
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0), i8* %0)
ret void
}
define void @printi_int(i32) {
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0), i32 %0)
ret void
}
@var_1 = constant [11 x i8] c"Print this\00"
@var_4 = constant [16 x i8] c"Dont print this\00"
define i32 @foo() {
%var_0 = alloca i32, i32 50
%var_1.ptr = getelementptr[11 x i8], [11 x i8]* @var_1, i32 0, i32 0
call void @print_string(i8* %var_1.ptr)
br label %label_4
label_4:
%var_2 = add i32 0, 10
ret i32 %var_2
ret i32 0
}
define i32 @fooNot() {
%var_3 = alloca i32, i32 50
%var_4.ptr = getelementptr[16 x i8], [16 x i8]* @var_4, i32 0, i32 0
call void @print_string(i8* %var_4.ptr)
br label %label_14
label_14:
%var_5 = add i32 0, 10
ret i32 %var_5
ret i32 0
}
define void @main() {
%var_6 = alloca i32, i32 50
%var_7 = add i32 0, 10
%var_9 = getelementptr i32, i32* %var_6, i32 0
store i32 %var_7, i32* %var_9
%var_11 = getelementptr i32, i32* %var_6, i32 1
store i32 0, i32* %var_11
%var_12 = getelementptr i32, i32* %var_6, i32 0
%var_13 = load i32,  i32* %var_12
%var_15 = getelementptr i32, i32* %var_6, i32 1
%var_16 = load i32,  i32* %var_15
%var_18 = sdiv i32 %var_13, %var_16
%var_20 = getelementptr i32, i32* %var_6, i32 0
store i32 %var_18, i32* %var_20
ret void
}
