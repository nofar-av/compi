@.intFormat = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @print_string(i8*) {
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0), i8* %0)
ret void
}
define void @printi_int(i32) {
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0), i32 %0)
ret void
}
define void @check_div_error(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @print_string(i8* getelementptr([23 x i8], [23 x i8]* @.DIVIDE_BY_ZERO.str, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
@var_1 = constant [11 x i8] c"Print this\00"
@var_4 = constant [16 x i8] c"Dont print this\00"
@var_25 = constant [16 x i8] c"boolean is true\00"
@var_26 = constant [16 x i8] c"Dont print this\00"
define i32 @foo() {
%var_0 = alloca i32, i32 50
%var_1.ptr = getelementptr[11 x i8], [11 x i8]* @var_1, i32 0, i32 0
call void @print_string(i8* %var_1.ptr)
br label %label_4
label_4:
%var_2 = add i32 0, 10
ret i32 %var_2
ret i32 0
}
define i32 @fooNot() {
%var_3 = alloca i32, i32 50
%var_4.ptr = getelementptr[16 x i8], [16 x i8]* @var_4, i32 0, i32 0
call void @print_string(i8* %var_4.ptr)
br label %label_14
label_14:
%var_5 = add i32 0, 10
ret i32 %var_5
ret i32 0
}
define void @main() {
%var_6 = alloca i32, i32 50
%var_7 = add i32 0, 1
%var_9 = getelementptr i32, i32* %var_6, i32 0
store i32 %var_7, i32* %var_9
%var_10 = getelementptr i32, i32* %var_6, i32 0
%var_11 = load i32,  i32* %var_10
%var_13 = add i32 0, 5
%var_14 = icmp sgt i32 %var_11, %var_13
br i1 %var_14, label %TRUE_LIST_label_36, label %label_30
br label %label_30
label_30:
%var_15 = add i32 0, 10
%var_16 = add i32 0, 20
%var_17 = icmp slt i32 %var_15, %var_16
br i1 %var_17, label %TRUE_LIST_label_36, label %FALSE_LIST_label_36
br label %TRUE_LIST_label_36
TRUE_LIST_label_36:
br label %NEXT_LIST_label_36
FALSE_LIST_label_36:
br label %NEXT_LIST_label_36
NEXT_LIST_label_36:
%var_18 = phi i1 [ 1, %TRUE_LIST_label_36], [0, %FALSE_LIST_label_36]
%var_19 = zext i1 %var_18 to i32
%var_20 = getelementptr i32, i32* %var_6, i32 1
store i32 %var_19, i32* %var_20
%var_21 = getelementptr i32, i32* %var_6, i32 1
%var_22 = load i32,  i32* %var_21
%var_23 = trunc i32 %var_22 to i1
%var_24 = icmp ne i1 0, %var_23
br i1 %var_24, label %label_51, label %label_58
br label %label_51
label_51:
%var_25.ptr = getelementptr[16 x i8], [16 x i8]* @var_25, i32 0, i32 0
call void @print_string(i8* %var_25.ptr)
br label %label_55
label_55:
br label %label_64
br label %label_58
label_58:
%var_26.ptr = getelementptr[16 x i8], [16 x i8]* @var_26, i32 0, i32 0
call void @print_string(i8* %var_26.ptr)
br label %label_62
label_62:
br label %label_64
label_64:
ret void
}
