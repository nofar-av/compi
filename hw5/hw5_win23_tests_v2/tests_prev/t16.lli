@.intFormat = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @print_string(i8*) {
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0), i8* %0)
ret void
}
define void @printi_int(i32) {
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0), i32 %0)
ret void
}
define void @check_div_error(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @print_string(i8* getelementptr([23 x i8], [23 x i8]* @.DIVIDE_BY_ZERO.str, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
@var_1 = constant [11 x i8] c"Print this\00"
@var_4 = constant [16 x i8] c"Dont print this\00"
@var_11 = constant [7 x i8] c"10 > x\00"
@var_45 = constant [16 x i8] c"While block end\00"
@var_46 = constant [15 x i8] c"y should be 90\00"
define i32 @foo() {
%var_0 = alloca i32, i32 50
%var_1.ptr = getelementptr[11 x i8], [11 x i8]* @var_1, i32 0, i32 0
call void @print_string(i8* %var_1.ptr)
br label %label_4
label_4:
%var_2 = add i32 0, 10
ret i32 %var_2
ret i32 0
}
define i32 @fooNot() {
%var_3 = alloca i32, i32 50
%var_4.ptr = getelementptr[16 x i8], [16 x i8]* @var_4, i32 0, i32 0
call void @print_string(i8* %var_4.ptr)
br label %label_14
label_14:
%var_5 = add i32 0, 10
ret i32 %var_5
ret i32 0
}
define void @callFoos_int_int(i32, i32) {
%var_6 = alloca i32, i32 50
%var_8 = getelementptr i32, i32* %var_6, i32 0
store i32 %1, i32* %var_8
%var_9 = call i32 @foo()
%var_10 = icmp sgt i32 %var_9, %0
br i1 %var_10, label %label_27, label %label_33
br label %label_27
label_27:
%var_11.ptr = getelementptr[7 x i8], [7 x i8]* @var_11, i32 0, i32 0
call void @print_string(i8* %var_11.ptr)
br label %label_31
label_31:
br label %label_33
label_33:
br label %label_35
label_35:
%var_12 = getelementptr i32, i32* %var_6, i32 0
%var_13 = load i32,  i32* %var_12
%var_15 = add i32 0, 5
%var_16 = icmp sgt i32 %var_13, %var_15
br i1 %var_16, label %label_48, label %label_42
br label %label_42
label_42:
%var_17 = call i32 @fooNot()
%var_18 = add i32 0, 100
%var_19 = icmp sgt i32 %var_17, %var_18
br i1 %var_19, label %label_48, label %label_86
br label %label_48
label_48:
%var_20 = getelementptr i32, i32* %var_6, i32 0
%var_21 = load i32,  i32* %var_20
%var_23 = add i32 0, 20
%var_24 = icmp sgt i32 %var_21, %var_23
br i1 %var_24, label %label_55, label %label_74
br label %label_55
label_55:
%var_25 = getelementptr i32, i32* %var_6, i32 0
%var_26 = load i32,  i32* %var_25
%var_28 = add i32 0, 5
%var_29 = sub i32 %var_26, %var_28
%var_31 = getelementptr i32, i32* %var_6, i32 0
store i32 %var_29, i32* %var_31
%var_32 = getelementptr i32, i32* %var_6, i32 0
%var_33 = load i32,  i32* %var_32
%var_35 = add i32 0, 90
%var_36 = icmp eq i32 %var_33, %var_35
br i1 %var_36, label %label_68, label %label_71
br label %label_68
label_68:
br label %label_86
br label %label_71
label_71:
br label %label_35
br label %label_74
label_74:
%var_37 = getelementptr i32, i32* %var_6, i32 0
%var_38 = load i32,  i32* %var_37
%var_40 = add i32 0, 1
%var_41 = sub i32 %var_38, %var_40
%var_43 = getelementptr i32, i32* %var_6, i32 0
store i32 %var_41, i32* %var_43
%var_44 = call i32 @fooNot()
br label %label_83
label_83:
br label %label_35
label_86:
%var_45.ptr = getelementptr[16 x i8], [16 x i8]* @var_45, i32 0, i32 0
call void @print_string(i8* %var_45.ptr)
br label %label_89
label_89:
%var_46.ptr = getelementptr[15 x i8], [15 x i8]* @var_46, i32 0, i32 0
call void @print_string(i8* %var_46.ptr)
br label %label_93
label_93:
%var_47 = getelementptr i32, i32* %var_6, i32 0
%var_48 = load i32,  i32* %var_47
call void @printi_int(i32 %var_48)
br label %label_98
label_98:
ret void
}
define void @main() {
%var_50 = alloca i32, i32 50
%var_51 = add i32 0, 100
%var_53 = getelementptr i32, i32* %var_50, i32 0
store i32 %var_51, i32* %var_53
%var_54 = add i32 0, 5
%var_55 = getelementptr i32, i32* %var_50, i32 0
%var_56 = load i32,  i32* %var_55
call void @callFoos_int_int(i32 %var_54, i32 %var_56)
br label %label_111
label_111:
ret void
}
