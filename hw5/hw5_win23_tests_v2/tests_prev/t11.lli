@.intFormat = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @print_string(i8*) {
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0), i8* %0)
ret void
}
define void @printi_int(i32) {
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0), i32 %0)
ret void
}
define void @check_div_error(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @print_string(i8* getelementptr([23 x i8], [23 x i8]* @.DIVIDE_BY_ZERO.str, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
@var_1 = constant [11 x i8] c"Print this\00"
@var_4 = constant [16 x i8] c"Dont print this\00"
@var_11 = constant [7 x i8] c"10 > x\00"
@var_15 = constant [15 x i8] c"Y should be 99\00"
define i32 @foo() {
%var_0 = alloca i32, i32 50
%var_1.ptr = getelementptr[11 x i8], [11 x i8]* @var_1, i32 0, i32 0
call void @print_string(i8* %var_1.ptr)
br label %label_4
label_4:
%var_2 = add i32 0, 10
ret i32 %var_2
ret i32 0
}
define i32 @fooNot() {
%var_3 = alloca i32, i32 50
%var_4.ptr = getelementptr[16 x i8], [16 x i8]* @var_4, i32 0, i32 0
call void @print_string(i8* %var_4.ptr)
br label %label_14
label_14:
%var_5 = add i32 0, 10
ret i32 %var_5
ret i32 0
}
define void @callFoos_int_int(i32, i32) {
%var_6 = alloca i32, i32 50
%var_8 = getelementptr i32, i32* %var_6, i32 0
store i32 %1, i32* %var_8
%var_9 = call i32 @foo()
%var_10 = icmp sgt i32 %var_9, %0
br i1 %var_10, label %label_27, label %label_33
br label %label_27
label_27:
%var_11.ptr = getelementptr[7 x i8], [7 x i8]* @var_11, i32 0, i32 0
call void @print_string(i8* %var_11.ptr)
br label %label_31
label_31:
br label %label_33
label_33:
%var_12 = add i32 0, 99
%var_14 = getelementptr i32, i32* %var_6, i32 0
store i32 %var_12, i32* %var_14
%var_15.ptr = getelementptr[15 x i8], [15 x i8]* @var_15, i32 0, i32 0
call void @print_string(i8* %var_15.ptr)
br label %label_40
label_40:
%var_16 = getelementptr i32, i32* %var_6, i32 0
%var_17 = load i32,  i32* %var_16
call void @printi_int(i32 %var_17)
br label %label_45
label_45:
ret void
}
define void @main() {
%var_19 = alloca i32, i32 50
%var_20 = add i32 0, 100
%var_22 = getelementptr i32, i32* %var_19, i32 0
store i32 %var_20, i32* %var_22
%var_23 = add i32 0, 5
%var_24 = getelementptr i32, i32* %var_19, i32 0
%var_25 = load i32,  i32* %var_24
call void @callFoos_int_int(i32 %var_23, i32 %var_25)
br label %label_58
label_58:
ret void
}
