@.intFormat = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @print_string(i8*) {
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0), i8* %0)
ret void
}
define void @printi_int(i32) {
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0), i32 %0)
ret void
}
@var_6 = constant [12 x i8] c"already? :(\00"
@var_8 = constant [3 x i8] c"ok\00"
@var_30 = constant [8 x i8] c"alright\00"
@var_49 = constant [6 x i8] c"back!\00"
@var_51 = constant [6 x i8] c"here!\00"
@var_80 = constant [6 x i8] c"great\00"
define i32 @foo_bool_int_byte(i1, i32, i8) {
%var_0 = alloca i32, i32 50
%var_2 = getelementptr i32, i32* %var_0, i32 0
store i32 %1, i32* %var_2
%var_4 = getelementptr i32, i32* %var_0, i32 1
store i32 %2, i32* %var_4
%var_5 = icmp ne i1 0, %0
br i1 %var_5, label %label_16, label %label_8
br label %label_8
label_8:
%var_6.ptr = getelementptr[12 x i8], [12 x i8]* @var_6, i32 0, i32 0
call void @print_string(i8* %var_6.ptr)
br label %label_12
label_12:
%var_7 = add i32 0, 15
ret i32 %var_7
br label %label_16
label_16:
%var_8.ptr = getelementptr[3 x i8], [3 x i8]* @var_8, i32 0, i32 0
call void @print_string(i8* %var_8.ptr)
br label %label_20
label_20:
br label %label_22
label_22:
%var_9 = getelementptr i32, i32* %var_0, i32 0
%var_10 = load i32,  i32* %var_9
%var_12 = add i32 0, 10
%var_13 = icmp slt i32 %var_10, %var_12
br i1 %var_13, label %label_29, label %label_62
br label %label_29
label_29:
%var_14 = getelementptr i32, i32* %var_0, i32 0
%var_15 = load i32,  i32* %var_14
%var_17 = add i32 0, 1
%var_18 = add i32 %var_15, %var_17
%var_20 = getelementptr i32, i32* %var_0, i32 0
store i32 %var_18, i32* %var_20
%var_21 = icmp ne i1 0, %0
br i1 %var_21, label %label_39, label %label_59
br label %label_39
label_39:
%var_22 = getelementptr i32, i32* %var_0, i32 0
%var_23 = load i32,  i32* %var_22
%var_25 = add i32 0, 7
%var_26 = icmp eq i32 %var_23, %var_25
br i1 %var_26, label %label_46, label %label_59
br label %label_46
label_46:
%var_27 = getelementptr i32, i32* %var_0, i32 0
%var_28 = load i32,  i32* %var_27
call void @printi_int(i32 %var_28)
br label %label_51
label_51:
%var_30.ptr = getelementptr[8 x i8], [8 x i8]* @var_30, i32 0, i32 0
call void @print_string(i8* %var_30.ptr)
br label %label_55
label_55:
%var_31 = add i32 0, 17
ret i32 %var_31
br label %label_59
label_59:
br label %label_22
label_62:
br label %label_63
label_63:
%var_32 = getelementptr i32, i32* %var_0, i32 1
%var_33 = load i32,  i32* %var_32
%var_35 = add i8 0, 12
%var_37 = zext i8 %var_35 to i32
%var_36 = icmp sgt i32 %var_33, %var_37
br i1 %var_36, label %label_71, label %label_92
br label %label_71
label_71:
%var_38 = getelementptr i32, i32* %var_0, i32 1
%var_39 = load i32,  i32* %var_38
%var_41 = add i8 0, 1
%var_43 = zext i8 %var_41 to i32
%var_42 = sub i32 %var_39, %var_43
%var_45 = getelementptr i32, i32* %var_0, i32 1
store i32 %var_42, i32* %var_45
%var_46 = getelementptr i32, i32* %var_0, i32 1
%var_47 = load i32,  i32* %var_46
call void @printi_int(i32 %var_47)
br label %label_83
label_83:
%var_49.ptr = getelementptr[6 x i8], [6 x i8]* @var_49, i32 0, i32 0
call void @print_string(i8* %var_49.ptr)
br label %label_87
label_87:
%var_50 = add i32 0, 18
ret i32 %var_50
br label %label_63
label_92:
%var_51.ptr = getelementptr[6 x i8], [6 x i8]* @var_51, i32 0, i32 0
call void @print_string(i8* %var_51.ptr)
br label %label_95
label_95:
%var_52 = add i32 0, 322
ret i32 %var_52
ret i32 0
}
define i1 @opposite_bool(i1) {
%var_53 = alloca i32, i32 50
br label %label_103
label_103:
br label %label_106
br label %label_106
label_106:
br label %label_108
label_108:
br label %label_111
br label %label_111
label_111:
br label %label_113
label_113:
br label %label_116
br label %label_116
label_116:
br label %label_118
label_118:
br label %label_121
br label %label_121
label_121:
br label %label_123
label_123:
br label %label_126
br label %label_126
label_126:
%var_54 = icmp ne i1 0, %0
br i1 %var_54, label %FALSE_LIST_label_130, label %TRUE_LIST_label_130
br label %TRUE_LIST_label_130
TRUE_LIST_label_130:
br label %NEXT_LIST_label_130
FALSE_LIST_label_130:
br label %NEXT_LIST_label_130
NEXT_LIST_label_130:
%var_55 = phi i1 [ 1, %TRUE_LIST_label_130], [0, %FALSE_LIST_label_130]
ret i1 %var_55
br label %label_123
label_139:
br label %label_142
br label %label_118
label_142:
br label %label_113
label_144:
br label %label_108
label_146:
br label %label_103
label_148:
%var_56 = icmp ne i1 0, %0
br i1 %var_56, label %FALSE_LIST_label_151, label %TRUE_LIST_label_151
br label %TRUE_LIST_label_151
TRUE_LIST_label_151:
br label %NEXT_LIST_label_151
FALSE_LIST_label_151:
br label %NEXT_LIST_label_151
NEXT_LIST_label_151:
%var_57 = phi i1 [ 1, %TRUE_LIST_label_151], [0, %FALSE_LIST_label_151]
ret i1 %var_57
ret i1 0
}
define i8 @multiply_byte_byte(i8, i8) {
%var_58 = alloca i32, i32 50
%var_59 = mul i8 %0, %1
ret i8 %var_59
ret i8 0
}
define void @main() {
%var_60 = alloca i32, i32 50
br label %FALSE_LIST_label_170
br label %TRUE_LIST_label_170
TRUE_LIST_label_170:
br label %NEXT_LIST_label_170
FALSE_LIST_label_170:
br label %NEXT_LIST_label_170
NEXT_LIST_label_170:
%var_61 = phi i1 [ 1, %TRUE_LIST_label_170], [0, %FALSE_LIST_label_170]
%var_62 = add i32 0, 5
%var_63 = add i8 0, 15
%var_64 = call i32 @foo_bool_int_byte(i1 %var_61, i32 %var_62, i8 %var_63)
call void @printi_int(i32 %var_64)
br label %label_181
label_181:
br label %TRUE_LIST_label_184
br label %TRUE_LIST_label_184
TRUE_LIST_label_184:
br label %NEXT_LIST_label_184
FALSE_LIST_label_184:
br label %NEXT_LIST_label_184
NEXT_LIST_label_184:
%var_65 = phi i1 [ 1, %TRUE_LIST_label_184], [0, %FALSE_LIST_label_184]
%var_66 = add i32 0, 5
%var_67 = add i8 0, 21
%var_68 = call i32 @foo_bool_int_byte(i1 %var_65, i32 %var_66, i8 %var_67)
call void @printi_int(i32 %var_68)
br label %label_195
label_195:
br label %TRUE_LIST_label_198
br label %TRUE_LIST_label_198
TRUE_LIST_label_198:
br label %NEXT_LIST_label_198
FALSE_LIST_label_198:
br label %NEXT_LIST_label_198
NEXT_LIST_label_198:
%var_69 = phi i1 [ 1, %TRUE_LIST_label_198], [0, %FALSE_LIST_label_198]
%var_70 = add i32 0, 11
%var_71 = add i8 0, 4
%var_72 = call i32 @foo_bool_int_byte(i1 %var_69, i32 %var_70, i8 %var_71)
call void @printi_int(i32 %var_72)
br label %label_209
label_209:
br label %TRUE_LIST_label_212
br label %TRUE_LIST_label_212
TRUE_LIST_label_212:
br label %NEXT_LIST_label_212
FALSE_LIST_label_212:
br label %NEXT_LIST_label_212
NEXT_LIST_label_212:
%var_73 = phi i1 [ 1, %TRUE_LIST_label_212], [0, %FALSE_LIST_label_212]
%var_74 = add i32 0, 10
%var_75 = add i8 0, 13
%var_76 = call i32 @foo_bool_int_byte(i1 %var_73, i32 %var_74, i8 %var_75)
call void @printi_int(i32 %var_76)
br label %label_223
label_223:
br label %FALSE_LIST_label_226
br label %TRUE_LIST_label_226
TRUE_LIST_label_226:
br label %NEXT_LIST_label_226
FALSE_LIST_label_226:
br label %NEXT_LIST_label_226
NEXT_LIST_label_226:
%var_77 = phi i1 [ 1, %TRUE_LIST_label_226], [0, %FALSE_LIST_label_226]
%var_78 = call i1 @opposite_bool(i1 %var_77)
%var_79 = icmp ne i1 0, %var_78
br i1 %var_79 , label %label_236, label %label_242
br label %label_236
label_236:
%var_80.ptr = getelementptr[6 x i8], [6 x i8]* @var_80, i32 0, i32 0
call void @print_string(i8* %var_80.ptr)
br label %label_240
label_240:
br label %label_242
label_242:
%var_81 = add i8 0, 16
%var_82 = add i8 0, 16
%var_83 = call i8 @multiply_byte_byte(i8 %var_81, i8 %var_82)
%var_84 = zext i8 %var_83 to i32
call void @printi_int(i32 %var_84)
br label %label_249
label_249:
ret void
}
