@.intFormat = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @print_string(i8*) {
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0), i8* %0)
ret void
}
define void @printi_int(i32) {
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0), i32 %0)
ret void
}
define void @maxTestsBigTruncationTest() {
%var_0 = alloca i32, i32 50
%var_1 = add i8 0, 126
%var_2 = add i8 0, 224
%var_3 = add i8 %var_1, %var_2
%var_4 = add i32 0, 139
%var_6 = zext i8 %var_3 to i32
%var_5 = add i32 %var_6, %var_4
%var_7 = add i8 0, 141
%var_9 = zext i8 %var_7 to i32
%var_8 = sub i32 %var_5, %var_9
%var_10 = add i8 0, 225
%var_12 = zext i8 %var_10 to i32
%var_11 = sub i32 %var_8, %var_12
%var_14 = getelementptr i32, i32* %var_0, i32 0
store i32 %var_11, i32* %var_14
%var_15 = getelementptr i32, i32* %var_0, i32 0
%var_16 = load i32,  i32* %var_15
call void @printi_int(i32 %var_16)
br label %label_19
label_19:
%var_18 = add i8 0, 126
%var_19 = add i8 0, 224
%var_20 = add i8 %var_18, %var_19
%var_21 = add i8 0, 139
%var_22 = add i8 %var_20, %var_21
%var_23 = add i8 0, 141
%var_24 = sub i8 %var_22, %var_23
%var_25 = add i8 0, 225
%var_26 = sub i8 %var_24, %var_25
%var_28 = getelementptr i32, i32* %var_0, i32 1
store i32 %var_26, i32* %var_28
%var_29 = getelementptr i32, i32* %var_0, i32 1
%var_30 = load i32,  i32* %var_29
call void @printi_int(i32 %var_30)
br label %label_35
label_35:
ret void
}
define void @main() {
%var_32 = alloca i32, i32 50
call void @maxTestsBigTruncationTest()
br label %label_42
label_42:
ret void
}
