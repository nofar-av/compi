@.intFormat = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @print_string(i8*) {
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0), i8* %0)
ret void
}
define void @printi_int(i32) {
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0), i32 %0)
ret void
}
define void @check_div_error(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @print_string(i8* getelementptr([23 x i8], [23 x i8]* @.DIVIDE_BY_ZERO.str, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
define void @Func_int(i32) {
%var_0 = alloca i32, i32 50
call void @printi_int(i32 %0)
br label %label_3
label_3:
ret void
}
define void @maxTestsStressTestBasicFunc() {
%var_1 = alloca i32, i32 50
%var_2 = add i32 0, 666
call void @Func_int(i32 %var_2)
br label %label_11
label_11:
%var_3 = add i32 0, 666
call void @Func_int(i32 %var_3)
br label %label_15
label_15:
%var_4 = add i32 0, 666
call void @Func_int(i32 %var_4)
br label %label_19
label_19:
%var_5 = add i32 0, 666
call void @Func_int(i32 %var_5)
br label %label_23
label_23:
%var_6 = add i32 0, 666
call void @Func_int(i32 %var_6)
br label %label_27
label_27:
%var_7 = add i32 0, 666
call void @Func_int(i32 %var_7)
br label %label_31
label_31:
%var_8 = add i32 0, 666
call void @Func_int(i32 %var_8)
br label %label_35
label_35:
%var_9 = add i32 0, 666
call void @Func_int(i32 %var_9)
br label %label_39
label_39:
%var_10 = add i32 0, 666
call void @Func_int(i32 %var_10)
br label %label_43
label_43:
%var_11 = add i32 0, 666
call void @Func_int(i32 %var_11)
br label %label_47
label_47:
%var_12 = add i32 0, 666
call void @Func_int(i32 %var_12)
br label %label_51
label_51:
%var_13 = add i32 0, 666
call void @Func_int(i32 %var_13)
br label %label_55
label_55:
%var_14 = add i32 0, 666
call void @Func_int(i32 %var_14)
br label %label_59
label_59:
%var_15 = add i32 0, 666
call void @Func_int(i32 %var_15)
br label %label_63
label_63:
%var_16 = add i32 0, 666
call void @Func_int(i32 %var_16)
br label %label_67
label_67:
%var_17 = add i32 0, 666
call void @Func_int(i32 %var_17)
br label %label_71
label_71:
%var_18 = add i32 0, 666
call void @Func_int(i32 %var_18)
br label %label_75
label_75:
%var_19 = add i32 0, 666
call void @Func_int(i32 %var_19)
br label %label_79
label_79:
%var_20 = add i32 0, 666
call void @Func_int(i32 %var_20)
br label %label_83
label_83:
%var_21 = add i32 0, 666
call void @Func_int(i32 %var_21)
br label %label_87
label_87:
%var_22 = add i32 0, 666
call void @Func_int(i32 %var_22)
br label %label_91
label_91:
%var_23 = add i32 0, 666
call void @Func_int(i32 %var_23)
br label %label_95
label_95:
%var_24 = add i32 0, 666
call void @Func_int(i32 %var_24)
br label %label_99
label_99:
%var_25 = add i32 0, 666
call void @Func_int(i32 %var_25)
br label %label_103
label_103:
%var_26 = add i32 0, 666
call void @Func_int(i32 %var_26)
br label %label_107
label_107:
ret void
}
define void @main() {
%var_27 = alloca i32, i32 50
call void @maxTestsStressTestBasicFunc()
br label %label_114
label_114:
ret void
}
