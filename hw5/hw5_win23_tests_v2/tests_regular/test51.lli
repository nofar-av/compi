@.intFormat = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @print_string(i8*) {
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0), i8* %0)
ret void
}
define void @printi_int(i32) {
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0), i32 %0)
ret void
}
@var_18 = constant [109 x i8] c"Success is not final, failure is not fatal: it is the courage to continue that counts. â€“ Winston Churchill\00"
define void @maxTestsTestBreak() {
%var_0 = alloca i32, i32 50
%var_2 = getelementptr i32, i32* %var_0, i32 0
store i32 0, i32* %var_2
br label %label_4
label_4:
br label %label_7
br label %label_7
label_7:
%var_3 = getelementptr i32, i32* %var_0, i32 0
%var_4 = load i32,  i32* %var_3
%var_6 = add i32 0, 10
%var_7 = icmp eq i32 %var_4, %var_6
br i1 %var_7, label %label_14, label %label_17
br label %label_14
label_14:
br label %label_31
br label %label_17
label_17:
%var_8 = getelementptr i32, i32* %var_0, i32 0
%var_9 = load i32,  i32* %var_8
%var_11 = add i32 0, 1
%var_12 = add i32 %var_9, %var_11
%var_14 = getelementptr i32, i32* %var_0, i32 0
store i32 %var_12, i32* %var_14
%var_15 = getelementptr i32, i32* %var_0, i32 0
%var_16 = load i32,  i32* %var_15
call void @printi_int(i32 %var_16)
br label %label_28
label_28:
br label %label_4
label_31:
%var_18.ptr = getelementptr[109 x i8], [109 x i8]* @var_18, i32 0, i32 0
call void @print_string(i8* %var_18.ptr)
br label %label_34
label_34:
ret void
}
define void @main() {
%var_19 = alloca i32, i32 50
call void @maxTestsTestBreak()
br label %label_41
label_41:
ret void
}
