@.intFormat = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @print_string(i8*) {
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0), i8* %0)
ret void
}
define void @printi_int(i32) {
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0), i32 %0)
ret void
}
define i32 @recursiveFibo_int(i32) {
%var_0 = alloca i32, i32 50
%var_1 = add i32 0, 0
%var_2 = icmp eq i32 %0, %var_1
br i1 %var_2, label %label_10, label %label_5
br label %label_5
label_5:
%var_3 = add i32 0, 1
%var_4 = icmp eq i32 %0, %var_3
br i1 %var_4, label %label_10, label %label_14
br label %label_10
label_10:
%var_5 = add i32 0, 1
ret i32 %var_5
br label %label_14
label_14:
%var_6 = add i32 0, 1
%var_7 = sub i32 %0, %var_6
%var_8 = call i32 @recursiveFibo_int(i32 %var_7)
%var_9 = add i32 0, 2
%var_10 = sub i32 %0, %var_9
%var_11 = call i32 @recursiveFibo_int(i32 %var_10)
%var_12 = add i32 %var_8, %var_11
ret i32 %var_12
ret i32 0
}
define void @maxTestsTestRecursiveFiboOutputs() {
%var_13 = alloca i32, i32 50
%var_15 = getelementptr i32, i32* %var_13, i32 0
store i32 0, i32* %var_15
br label %label_30
label_30:
%var_16 = getelementptr i32, i32* %var_13, i32 0
%var_17 = load i32,  i32* %var_16
%var_19 = add i32 0, 10
%var_20 = icmp slt i32 %var_17, %var_19
br i1 %var_20, label %label_37, label %label_52
br label %label_37
label_37:
%var_21 = getelementptr i32, i32* %var_13, i32 0
%var_22 = load i32,  i32* %var_21
%var_24 = call i32 @recursiveFibo_int(i32 %var_22)
call void @printi_int(i32 %var_24)
br label %label_43
label_43:
%var_25 = getelementptr i32, i32* %var_13, i32 0
%var_26 = load i32,  i32* %var_25
%var_28 = add i32 0, 1
%var_29 = add i32 %var_26, %var_28
%var_31 = getelementptr i32, i32* %var_13, i32 0
store i32 %var_29, i32* %var_31
br label %label_30
label_52:
ret void
}
define void @main() {
%var_32 = alloca i32, i32 50
call void @maxTestsTestRecursiveFiboOutputs()
br label %label_58
label_58:
ret void
}
