@.intFormat = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @print_string(i8*) {
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0), i8* %0)
ret void
}
define void @printi_int(i32) {
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0), i32 %0)
ret void
}
define void @check_div_error(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @print_string(i8* getelementptr([23 x i8], [23 x i8]* @.DIVIDE_BY_ZERO.str, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
@var_40 = constant [20 x i8] c"shouldn't get here1\00"
@var_44 = constant [20 x i8] c"shouldn't get here2\00"
define i32 @func_int_int(i32, i32) {
%var_0 = alloca i32, i32 50
%var_1 = add i32 0, 2
%var_2 = mul i32 %var_1, %1
%var_4 = getelementptr i32, i32* %var_0, i32 0
store i32 %var_2, i32* %var_4
%var_5 = getelementptr i32, i32* %var_0, i32 0
%var_6 = load i32,  i32* %var_5
%var_9 = getelementptr i32, i32* %var_0, i32 1
store i32 %var_6, i32* %var_9
%var_10 = getelementptr i32, i32* %var_0, i32 1
%var_11 = load i32,  i32* %var_10
%var_13 = add i32 0, 5
%var_14 = mul i32 %var_11, %var_13
ret i32 %var_14
ret i32 0
}
define void @main() {
%var_15 = alloca i32, i32 50
%var_16 = add i32 0, 3
%var_18 = getelementptr i32, i32* %var_15, i32 0
store i32 %var_16, i32* %var_18
%var_19 = add i32 0, 8
%var_21 = getelementptr i32, i32* %var_15, i32 1
store i32 %var_19, i32* %var_21
%var_22 = getelementptr i32, i32* %var_15, i32 0
%var_23 = load i32,  i32* %var_22
%var_25 = getelementptr i32, i32* %var_15, i32 1
%var_26 = load i32,  i32* %var_25
%var_28 = call i32 @func_int_int(i32 %var_23, i32 %var_26)
%var_30 = getelementptr i32, i32* %var_15, i32 2
store i32 %var_28, i32* %var_30
%var_31 = getelementptr i32, i32* %var_15, i32 2
%var_32 = load i32,  i32* %var_31
call void @printi_int(i32 %var_32)
br label %label_35
label_35:
br label %label_37
label_37:
br label %label_40
br label %label_40
label_40:
%var_34 = add i32 0, 0
%var_36 = getelementptr i32, i32* %var_15, i32 3
store i32 %var_34, i32* %var_36
%var_37 = getelementptr i32, i32* %var_15, i32 3
%var_38 = load i32,  i32* %var_37
call void @printi_int(i32 %var_38)
br label %label_48
label_48:
br label %label_72
%var_40.ptr = getelementptr[20 x i8], [20 x i8]* @var_40, i32 0, i32 0
call void @print_string(i8* %var_40.ptr)
br label %label_53
label_53:
br label %label_37
br label %label_56
label_56:
br label %label_59
br label %label_59
label_59:
%var_41 = add i32 0, 5
%var_43 = getelementptr i32, i32* %var_15, i32 4
store i32 %var_41, i32* %var_43
%var_44.ptr = getelementptr[20 x i8], [20 x i8]* @var_44, i32 0, i32 0
call void @print_string(i8* %var_44.ptr)
br label %label_66
label_66:
br label %label_56
br label %label_56
label_70:
br label %label_37
label_72:
ret void
}
