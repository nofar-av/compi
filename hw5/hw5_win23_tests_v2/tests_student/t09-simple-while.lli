@.intFormat = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @print_string(i8*) {
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0), i8* %0)
ret void
}
define void @printi_int(i32) {
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0), i32 %0)
ret void
}
define void @check_div_error(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @print_string(i8* getelementptr([23 x i8], [23 x i8]* @.DIVIDE_BY_ZERO.str, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
@var_1 = constant [29 x i8] c"never gonna happen hopefully\00"
define void @main() {
%var_0 = alloca i32, i32 50
br label %label_2
label_2:
br label %label_12
br label %label_5
label_5:
%var_1.ptr = getelementptr[29 x i8], [29 x i8]* @var_1, i32 0, i32 0
call void @print_string(i8* %var_1.ptr)
br label %label_9
label_9:
br label %label_2
label_12:
%var_2 = add i32 0, 0
%var_4 = getelementptr i32, i32* %var_0, i32 0
store i32 %var_2, i32* %var_4
br label %label_16
label_16:
%var_5 = getelementptr i32, i32* %var_0, i32 0
%var_6 = load i32,  i32* %var_5
%var_8 = add i32 0, 10
%var_9 = icmp slt i32 %var_6, %var_8
br i1 %var_9, label %label_23, label %label_37
br label %label_23
label_23:
%var_10 = getelementptr i32, i32* %var_0, i32 0
%var_11 = load i32,  i32* %var_10
call void @printi_int(i32 %var_11)
br label %label_28
label_28:
%var_13 = getelementptr i32, i32* %var_0, i32 0
%var_14 = load i32,  i32* %var_13
%var_16 = add i32 0, 1
%var_17 = add i32 %var_14, %var_16
%var_19 = getelementptr i32, i32* %var_0, i32 0
store i32 %var_17, i32* %var_19
br label %label_16
label_37:
ret void
}
