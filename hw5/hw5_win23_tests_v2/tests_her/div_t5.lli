@.intFormat = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @print_string(i8*) {
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0), i8* %0)
ret void
}
define void @printi_int(i32) {
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0), i32 %0)
ret void
}
define void @check_div_error(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @print_string(i8* getelementptr([23 x i8], [23 x i8]* @.DIVIDE_BY_ZERO.str, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
@var_13 = constant [18 x i8] c"This should print\00"
@var_28 = constant [21 x i8] c"This shouldn't print\00"
define i1 @f() {
%var_0 = alloca i32, i32 50
br label %label_3
br label %label_3
label_3:
%var_1 = add i32 0, 1
%var_2 = add i32 0, 0
%var_3 = icmp slt i32 %var_1, %var_2
br i1 %var_3, label %FALSE_LIST_label_9, label %TRUE_LIST_label_9
br label %TRUE_LIST_label_9
TRUE_LIST_label_9:
br label %NEXT_LIST_label_9
FALSE_LIST_label_9:
br label %NEXT_LIST_label_9
NEXT_LIST_label_9:
%var_4 = phi i1 [ 1, %TRUE_LIST_label_9], [0, %FALSE_LIST_label_9]
ret i1 %var_4
ret i1 0
}
define void @main() {
%var_5 = alloca i32, i32 50
%var_6 = call i1 @f()
%var_7 = icmp ne i1 0, %var_6
br i1 %var_7 , label %label_33, label %label_24
br label %label_24
label_24:
%var_8 = add i32 0, 5
%var_9 = add i32 0, 0
call void @check_div_error(i32 %var_9)
%var_10 = sdiv i32 %var_8, %var_9
%var_11 = add i32 0, 1
%var_12 = icmp eq i32 %var_10, %var_11
br i1 %var_12, label %label_33, label %label_39
br label %label_33
label_33:
%var_13.ptr = getelementptr[18 x i8], [18 x i8]* @var_13, i32 0, i32 0
call void @print_string(i8* %var_13.ptr)
br label %label_37
label_37:
br label %label_39
label_39:
%var_14 = add i8 0, 0
%var_15 = zext i8 %var_14 to i32
%var_16 = getelementptr i32, i32* %var_5, i32 0
store i32 %var_15, i32* %var_16
%var_17 = add i32 0, 5
%var_18 = getelementptr i32, i32* %var_5, i32 0
%var_19 = load i32,  i32* %var_18
%var_20 = trunc i32 %var_19 to i8
%var_22 = zext i8 %var_20 to i32
call void @check_div_error(i32 %var_22)
%var_23 = zext i8 %var_20 to i32
%var_21 = sdiv i32 %var_17, %var_23
%var_24 = add i32 0, 1
%var_25 = icmp eq i32 %var_21, %var_24
br i1 %var_25, label %label_61, label %label_56
br label %label_56
label_56:
%var_26 = call i1 @f()
%var_27 = icmp ne i1 0, %var_26
br i1 %var_27 , label %label_61, label %label_67
br label %label_61
label_61:
%var_28.ptr = getelementptr[21 x i8], [21 x i8]* @var_28, i32 0, i32 0
call void @print_string(i8* %var_28.ptr)
br label %label_65
label_65:
br label %label_67
label_67:
ret void
}
