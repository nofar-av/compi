@.intFormat = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @print_string(i8*) {
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0), i8* %0)
ret void
}
define void @printi_int(i32) {
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0), i32 %0)
ret void
}
define void @check_div_error(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @print_string(i8* getelementptr([23 x i8], [23 x i8]* @.DIVIDE_BY_ZERO.str, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
define i1 @func1_byte(i8) {
%var_0 = alloca i32, i32 50
%var_1 = add i32 0, 5
%var_3 = zext i8 %0 to i32
%var_2 = icmp slt i32 %var_3, %var_1
br i1 %var_2, label %TRUE_LIST_label_6, label %FALSE_LIST_label_6
br label %TRUE_LIST_label_6
TRUE_LIST_label_6:
br label %NEXT_LIST_label_6
FALSE_LIST_label_6:
br label %NEXT_LIST_label_6
NEXT_LIST_label_6:
%var_4 = phi i1 [ 1, %TRUE_LIST_label_6], [0, %FALSE_LIST_label_6]
ret i1 %var_4
ret i1 0
}
define void @main() {
%var_5 = alloca i32, i32 50
%var_6 = add i8 0, 0
%var_7 = zext i8 %var_6 to i32
%var_8 = getelementptr i32, i32* %var_5, i32 0
store i32 %var_7, i32* %var_8
br label %label_22
label_22:
%var_9 = getelementptr i32, i32* %var_5, i32 0
%var_10 = load i32,  i32* %var_9
%var_11 = trunc i32 %var_10 to i8
%var_12 = call i1 @func1_byte(i8 %var_11)
%var_13 = icmp ne i1 0, %var_12
br i1 %var_13 , label %label_30, label %label_48
br label %label_30
label_30:
%var_14 = getelementptr i32, i32* %var_5, i32 0
%var_15 = load i32,  i32* %var_14
%var_16 = trunc i32 %var_15 to i8
%var_17 = zext i8 %var_16 to i32
call void @printi_int(i32 %var_17)
br label %label_37
label_37:
%var_18 = getelementptr i32, i32* %var_5, i32 0
%var_19 = load i32,  i32* %var_18
%var_20 = trunc i32 %var_19 to i8
%var_21 = add i8 0, 1
%var_22 = add i8 %var_20, %var_21
%var_23 = zext i8 %var_22 to i32
%var_24 = getelementptr i32, i32* %var_5, i32 0
store i32 %var_23, i32* %var_24
br label %label_22
label_48:
ret void
}
