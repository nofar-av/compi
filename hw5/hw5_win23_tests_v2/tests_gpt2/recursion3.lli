@.intFormat = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @print_string(i8*) {
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0), i8* %0)
ret void
}
define void @printi_int(i32) {
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0), i32 %0)
ret void
}
define void @check_div_error(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @print_string(i8* getelementptr([23 x i8], [23 x i8]* @.DIVIDE_BY_ZERO.str, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
@var_17 = constant [8 x i8] c"Res is \00"
define i32 @factorial_int(i32) {
%var_0 = alloca i32, i32 50
%var_1 = add i32 0, 1
%var_2 = icmp eq i32 %0, %var_1
br i1 %var_2, label %label_5, label %label_10
br label %label_5
label_5:
%var_3 = add i32 0, 1
ret i32 %var_3
br label %label_17
br label %label_10
label_10:
%var_4 = add i32 0, 1
%var_5 = sub i32 %0, %var_4
%var_6 = call i32 @factorial_int(i32 %var_5)
%var_7 = mul i32 %0, %var_6
ret i32 %var_7
br label %label_17
label_17:
ret i32 0
}
define i8 @bfactorial_byte(i8) {
%var_8 = alloca i32, i32 50
%var_9 = add i8 0, 1
%var_10 = icmp eq i8 %0, %var_9
br i1 %var_10, label %label_26, label %label_31
br label %label_26
label_26:
%var_11 = add i8 0, 1
ret i8 %var_11
br label %label_38
br label %label_31
label_31:
%var_12 = add i8 0, 1
%var_13 = sub i8 %0, %var_12
%var_14 = call i8 @bfactorial_byte(i8 %var_13)
%var_15 = mul i8 %0, %var_14
ret i8 %var_15
br label %label_38
label_38:
ret i8 0
}
define void @main() {
%var_16 = alloca i32, i32 50
%var_17.ptr = getelementptr[8 x i8], [8 x i8]* @var_17, i32 0, i32 0
call void @print_string(i8* %var_17.ptr)
br label %label_46
label_46:
%var_18 = add i32 0, 5
%var_19 = call i32 @factorial_int(i32 %var_18)
%var_20 = add i8 0, 5
%var_21 = call i8 @bfactorial_byte(i8 %var_20)
%var_23 = zext i8 %var_21 to i32
%var_22 = add i32 %var_19, %var_23
call void @printi_int(i32 %var_22)
br label %label_55
label_55:
ret void
}
