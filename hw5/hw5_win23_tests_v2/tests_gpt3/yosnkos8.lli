@.intFormat = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @print_string(i8*) {
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0), i8* %0)
ret void
}
define void @printi_int(i32) {
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0), i32 %0)
ret void
}
define i32 @foo() {
%var_0 = alloca i32, i32 50
%var_1 = add i32 0, 3
call void @printi_int(i32 %var_1)
br label %label_4
label_4:
%var_2 = add i32 0, 1
ret i32 %var_2
ret i32 0
}
define void @main() {
%var_3 = alloca i32, i32 50
%var_4 = call i32 @foo()
br label %label_13
label_13:
%var_5 = add i32 0, 99
call void @printi_int(i32 %var_5)
br label %label_17
label_17:
ret void
ret void
}
