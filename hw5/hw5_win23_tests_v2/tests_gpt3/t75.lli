@.intFormat = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @print_string(i8*) {
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0), i8* %0)
ret void
}
define void @printi_int(i32) {
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0), i32 %0)
ret void
}
define void @check_div_error(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @print_string(i8* getelementptr([23 x i8], [23 x i8]* @.DIVIDE_BY_ZERO.str, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
@var_52 = constant [23 x i8] c"this should not happen\00"
define i8 @zero() {
%var_0 = alloca i32, i32 50
%var_1 = add i8 0, 0
ret i8 %var_1
ret i8 0
}
define i32 @willThisNeedManyRegisters_int_int_int_int_int_int_int(i32, i32, i32, i32, i32, i32, i32) {
%var_2 = alloca i32, i32 50
%var_3 = call i8 @zero()
%var_5 = zext i8 %var_3 to i32
%var_4 = mul i32 %var_5, %0
%var_6 = mul i32 %var_4, %0
%var_7 = mul i32 %0, %0
%var_8 = add i32 %var_6, %var_7
%var_9 = mul i32 %1, %2
%var_10 = mul i32 %var_9, %0
%var_11 = add i32 %var_8, %var_10
%var_12 = mul i32 %3, %1
%var_13 = mul i32 %var_12, %4
call void @check_div_error(i32 %5)
%var_14 = sdiv i32 %var_13, %5
%var_15 = sub i32 %var_11, %var_14
%var_16 = add i32 %var_15, %5
%var_17 = mul i32 %6, %6
%var_18 = mul i32 %var_17, %6
%var_19 = add i32 %var_16, %var_18
%var_20 = sub i32 %var_19, %1
ret i32 %var_20
ret i32 0
}
define void @main() {
%var_21 = alloca i32, i32 50
%var_22 = add i32 0, 2
%var_23 = add i32 0, 3
%var_24 = add i32 0, 6
%var_25 = mul i32 %var_23, %var_24
%var_26 = add i32 0, 4
call void @check_div_error(i32 %var_26)
%var_27 = sdiv i32 %var_25, %var_26
%var_28 = add i32 %var_22, %var_27
%var_29 = add i32 0, 1
%var_30 = sub i32 %var_28, %var_29
call void @printi_int(i32 %var_30)
br label %label_43
label_43:
%var_31 = add i8 0, 23
%var_32 = add i32 0, 12
%var_34 = zext i8 %var_31 to i32
%var_33 = mul i32 %var_34, %var_32
%var_35 = add i32 0, 459
%var_36 = add i32 %var_33, %var_35
call void @printi_int(i32 %var_36)
br label %label_52
label_52:
%var_37 = add i32 0, 0
%var_38 = add i32 0, 1
%var_39 = add i32 0, 2
%var_40 = add i32 0, 3
%var_41 = add i32 0, 4
%var_42 = add i32 0, 5
%var_43 = add i32 0, 6
%var_44 = call i32 @willThisNeedManyRegisters_int_int_int_int_int_int_int(i32 %var_37, i32 %var_38, i32 %var_39, i32 %var_40, i32 %var_41, i32 %var_42, i32 %var_43)
call void @printi_int(i32 %var_44)
br label %label_63
label_63:
%var_45 = add i32 0, 12
%var_46 = call i8 @zero()
%var_48 = zext i8 %var_46 to i32
call void @check_div_error(i32 %var_48)
%var_49 = zext i8 %var_46 to i32
%var_47 = sdiv i32 %var_45, %var_49
%var_51 = getelementptr i32, i32* %var_21, i32 0
store i32 %var_47, i32* %var_51
%var_52.ptr = getelementptr[23 x i8], [23 x i8]* @var_52, i32 0, i32 0
call void @print_string(i8* %var_52.ptr)
br label %label_75
label_75:
ret void
}
