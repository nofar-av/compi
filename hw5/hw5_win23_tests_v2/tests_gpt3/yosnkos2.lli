@.intFormat = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @print_string(i8*) {
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0), i8* %0)
ret void
}
define void @printi_int(i32) {
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0), i32 %0)
ret void
}
define void @check_div_error(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @print_string(i8* getelementptr([23 x i8], [23 x i8]* @.DIVIDE_BY_ZERO.str, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
define void @main() {
%var_0 = alloca i32, i32 50
%var_1 = add i32 0, 3
%var_3 = getelementptr i32, i32* %var_0, i32 0
store i32 %var_1, i32* %var_3
br label %label_5
label_5:
%var_4 = getelementptr i32, i32* %var_0, i32 0
%var_5 = load i32,  i32* %var_4
%var_7 = add i32 0, 0
%var_8 = icmp sge i32 %var_5, %var_7
br i1 %var_8, label %label_12, label %label_26
br label %label_12
label_12:
%var_9 = getelementptr i32, i32* %var_0, i32 0
%var_10 = load i32,  i32* %var_9
call void @printi_int(i32 %var_10)
br label %label_17
label_17:
%var_12 = getelementptr i32, i32* %var_0, i32 0
%var_13 = load i32,  i32* %var_12
%var_15 = add i32 0, 1
%var_16 = sub i32 %var_13, %var_15
%var_18 = getelementptr i32, i32* %var_0, i32 0
store i32 %var_16, i32* %var_18
br label %label_5
label_26:
%var_19 = add i32 0, 9002
call void @printi_int(i32 %var_19)
br label %label_29
label_29:
ret void
ret void
}
