@.intFormat = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @print_string(i8*) {
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0), i8* %0)
ret void
}
define void @printi_int(i32) {
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0), i32 %0)
ret void
}
define void @check_div_error(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @print_string(i8* getelementptr([23 x i8], [23 x i8]* @.DIVIDE_BY_ZERO.str, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
@var_3 = constant [5 x i8] c"ok11\00"
@var_12 = constant [4 x i8] c"ok1\00"
@var_22 = constant [4 x i8] c"ok2\00"
@var_33 = constant [4 x i8] c"ok3\00"
@var_34 = constant [4 x i8] c"ok4\00"
@var_35 = constant [4 x i8] c"ok5\00"
@var_36 = constant [4 x i8] c"ok6\00"
@var_37 = constant [8 x i8] c"not ok7\00"
@var_38 = constant [8 x i8] c"not ok8\00"
@var_39 = constant [4 x i8] c"ok9\00"
@var_40 = constant [4 x i8] c"k10\00"
define void @test_int(i32) {
%var_0 = alloca i32, i32 50
%var_1 = add i32 0, 0
%var_2 = icmp eq i32 %0, %var_1
br i1 %var_2, label %label_5, label %label_11
br label %label_5
label_5:
%var_3.ptr = getelementptr[5 x i8], [5 x i8]* @var_3, i32 0, i32 0
call void @print_string(i8* %var_3.ptr)
br label %label_9
label_9:
br label %label_11
label_11:
ret void
}
define void @main() {
%var_4 = alloca i32, i32 50
%var_5 = add i32 0, 0
call void @test_int(i32 %var_5)
br label %label_19
label_19:
%var_6 = add i32 0, 1
%var_7 = add i32 0, 1
%var_8 = icmp eq i32 %var_6, %var_7
br i1 %var_8, label %label_25, label %label_39
br label %label_25
label_25:
%var_9 = add i32 0, 1
%var_10 = add i32 0, 1
%var_11 = icmp eq i32 %var_9, %var_10
br i1 %var_11, label %label_31, label %label_37
br label %label_31
label_31:
%var_12.ptr = getelementptr[4 x i8], [4 x i8]* @var_12, i32 0, i32 0
call void @print_string(i8* %var_12.ptr)
br label %label_35
label_35:
br label %label_37
label_37:
br label %label_39
label_39:
%var_13 = add i32 0, 1
%var_14 = add i32 0, 1
%var_15 = icmp eq i32 %var_13, %var_14
br i1 %var_15, label %label_45, label %label_65
br label %label_45
label_45:
%var_16 = add i32 0, 0
%var_18 = getelementptr i32, i32* %var_4, i32 0
store i32 %var_16, i32* %var_18
%var_19 = add i32 0, 1
%var_20 = add i32 0, 1
%var_21 = icmp eq i32 %var_19, %var_20
br i1 %var_21, label %label_54, label %label_60
br label %label_54
label_54:
%var_22.ptr = getelementptr[4 x i8], [4 x i8]* @var_22, i32 0, i32 0
call void @print_string(i8* %var_22.ptr)
br label %label_58
label_58:
br label %label_60
label_60:
%var_23 = add i32 0, 0
%var_25 = getelementptr i32, i32* %var_4, i32 1
store i32 %var_23, i32* %var_25
br label %label_65
label_65:
br label %TRUE_LIST_label_68
br label %TRUE_LIST_label_68
TRUE_LIST_label_68:
br label %NEXT_LIST_label_68
FALSE_LIST_label_68:
br label %NEXT_LIST_label_68
NEXT_LIST_label_68:
%var_26 = phi i1 [ 1, %TRUE_LIST_label_68], [0, %FALSE_LIST_label_68]
%var_27 = zext i1 %var_26 to i32
%var_28 = getelementptr i32, i32* %var_4, i32 0
store i32 %var_27, i32* %var_28
%var_29 = getelementptr i32, i32* %var_4, i32 0
%var_30 = load i32,  i32* %var_29
%var_31 = trunc i32 %var_30 to i1
%var_32 = icmp ne i1 0, %var_31
br i1 %var_32, label %label_83, label %label_89
br label %label_83
label_83:
%var_33.ptr = getelementptr[4 x i8], [4 x i8]* @var_33, i32 0, i32 0
call void @print_string(i8* %var_33.ptr)
br label %label_87
label_87:
br label %label_89
label_89:
br label %label_92
br label %label_92
label_92:
%var_34.ptr = getelementptr[4 x i8], [4 x i8]* @var_34, i32 0, i32 0
call void @print_string(i8* %var_34.ptr)
br label %label_96
label_96:
br label %label_98
label_98:
br label %label_101
br label %label_101
label_101:
br label %label_104
br label %label_104
label_104:
%var_35.ptr = getelementptr[4 x i8], [4 x i8]* @var_35, i32 0, i32 0
call void @print_string(i8* %var_35.ptr)
br label %label_108
label_108:
br label %label_117
br label %label_111
label_111:
%var_36.ptr = getelementptr[4 x i8], [4 x i8]* @var_36, i32 0, i32 0
call void @print_string(i8* %var_36.ptr)
br label %label_115
label_115:
br label %label_117
label_117:
br label %label_138
br label %label_120
label_120:
br label %label_123
br label %label_123
label_123:
%var_37.ptr = getelementptr[8 x i8], [8 x i8]* @var_37, i32 0, i32 0
call void @print_string(i8* %var_37.ptr)
br label %label_127
label_127:
br label %label_136
br label %label_130
label_130:
%var_38.ptr = getelementptr[8 x i8], [8 x i8]* @var_38, i32 0, i32 0
call void @print_string(i8* %var_38.ptr)
br label %label_134
label_134:
br label %label_136
label_136:
br label %label_138
label_138:
br label %label_141
br label %label_141
label_141:
br label %label_151
br label %label_144
label_144:
%var_39.ptr = getelementptr[4 x i8], [4 x i8]* @var_39, i32 0, i32 0
call void @print_string(i8* %var_39.ptr)
br label %label_148
label_148:
br label %label_157
br label %label_151
label_151:
%var_40.ptr = getelementptr[4 x i8], [4 x i8]* @var_40, i32 0, i32 0
call void @print_string(i8* %var_40.ptr)
br label %label_155
label_155:
br label %label_157
label_157:
br label %label_159
label_159:
ret void
ret void
}
