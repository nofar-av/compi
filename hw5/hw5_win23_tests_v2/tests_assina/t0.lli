@.intFormat = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @print_string(i8*) {
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0), i8* %0)
ret void
}
define void @printi_int(i32) {
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0), i32 %0)
ret void
}
@var_1 = constant [29 x i8] c"this is the very first test!\00"
@var_2 = constant [43 x i8] c"Here we test basic calculation and storing\00"
@var_3 = constant [19 x i8] c"Calculating 1+2...\00"
@var_9 = constant [16 x i8] c"the result is: \00"
@var_13 = constant [5 x i8] c"Bye!\00"
define void @main() {
%var_0 = alloca i32, i32 50
%var_1.ptr = getelementptr[29 x i8], [29 x i8]* @var_1, i32 0, i32 0
call void @print_string(i8* %var_1.ptr)
br label %label_4
label_4:
%var_2.ptr = getelementptr[43 x i8], [43 x i8]* @var_2, i32 0, i32 0
call void @print_string(i8* %var_2.ptr)
br label %label_8
label_8:
%var_3.ptr = getelementptr[19 x i8], [19 x i8]* @var_3, i32 0, i32 0
call void @print_string(i8* %var_3.ptr)
br label %label_12
label_12:
%var_4 = add i32 0, 1
%var_5 = add i32 0, 2
%var_6 = add i32 %var_4, %var_5
%var_8 = getelementptr i32, i32* %var_0, i32 0
store i32 %var_6, i32* %var_8
%var_9.ptr = getelementptr[16 x i8], [16 x i8]* @var_9, i32 0, i32 0
call void @print_string(i8* %var_9.ptr)
br label %label_21
label_21:
%var_10 = getelementptr i32, i32* %var_0, i32 0
%var_11 = load i32,  i32* %var_10
call void @printi_int(i32 %var_11)
br label %label_26
label_26:
%var_13.ptr = getelementptr[5 x i8], [5 x i8]* @var_13, i32 0, i32 0
call void @print_string(i8* %var_13.ptr)
br label %label_30
label_30:
ret void
ret void
}
