@.intFormat = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @print_string(i8*) {
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0), i8* %0)
ret void
}
define void @printi_int(i32) {
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0), i32 %0)
ret void
}
define void @check_div_error(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @print_string(i8* getelementptr([23 x i8], [23 x i8]* @.DIVIDE_BY_ZERO.str, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
@var_1 = constant [21 x i8] c"surprise while test!\00"
@var_2 = constant [46 x i8] c"div by 0 should appear by the 256th iteration\00"
@var_6 = constant [22 x i8] c"infinite loop coming:\00"
@var_17 = constant [12 x i8] c"iteration: \00"
@var_32 = constant [19 x i8] c"Shouldn't get here\00"
define void @main() {
%var_0 = alloca i32, i32 50
%var_1.ptr = getelementptr[21 x i8], [21 x i8]* @var_1, i32 0, i32 0
call void @print_string(i8* %var_1.ptr)
br label %label_4
label_4:
%var_2.ptr = getelementptr[46 x i8], [46 x i8]* @var_2, i32 0, i32 0
call void @print_string(i8* %var_2.ptr)
br label %label_8
label_8:
%var_3 = add i8 0, 0
%var_4 = zext i8 %var_3 to i32
%var_5 = getelementptr i32, i32* %var_0, i32 0
store i32 %var_4, i32* %var_5
%var_6.ptr = getelementptr[22 x i8], [22 x i8]* @var_6, i32 0, i32 0
call void @print_string(i8* %var_6.ptr)
br label %label_16
label_16:
br label %label_18
label_18:
br label %label_21
br label %label_21
label_21:
%var_7 = add i8 0, 255
%var_8 = zext i8 %var_7 to i32
%var_9 = getelementptr i32, i32* %var_0, i32 1
store i32 %var_8, i32* %var_9
%var_10 = getelementptr i32, i32* %var_0, i32 0
%var_11 = load i32,  i32* %var_10
%var_12 = trunc i32 %var_11 to i8
%var_13 = add i8 0, 1
%var_14 = add i8 %var_12, %var_13
%var_15 = zext i8 %var_14 to i32
%var_16 = getelementptr i32, i32* %var_0, i32 0
store i32 %var_15, i32* %var_16
%var_17.ptr = getelementptr[12 x i8], [12 x i8]* @var_17, i32 0, i32 0
call void @print_string(i8* %var_17.ptr)
br label %label_37
label_37:
%var_18 = getelementptr i32, i32* %var_0, i32 0
%var_19 = load i32,  i32* %var_18
%var_20 = trunc i32 %var_19 to i8
%var_21 = zext i8 %var_20 to i32
call void @printi_int(i32 %var_21)
br label %label_44
label_44:
%var_22 = getelementptr i32, i32* %var_0, i32 1
%var_23 = load i32,  i32* %var_22
%var_24 = trunc i32 %var_23 to i8
%var_25 = getelementptr i32, i32* %var_0, i32 0
%var_26 = load i32,  i32* %var_25
%var_27 = trunc i32 %var_26 to i8
%var_29 = zext i8 %var_27 to i32
call void @check_div_error(i32 %var_29)
%var_28 = udiv i8 %var_24, %var_27
%var_30 = zext i8 %var_28 to i32
%var_31 = getelementptr i32, i32* %var_0, i32 1
store i32 %var_30, i32* %var_31
br label %label_18
label_59:
%var_32.ptr = getelementptr[19 x i8], [19 x i8]* @var_32, i32 0, i32 0
call void @print_string(i8* %var_32.ptr)
br label %label_62
label_62:
ret void
}
