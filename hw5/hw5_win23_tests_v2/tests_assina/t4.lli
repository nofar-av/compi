@.intFormat = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @print_string(i8*) {
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0), i8* %0)
ret void
}
define void @printi_int(i32) {
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0), i32 %0)
ret void
}
define void @check_div_error(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @print_string(i8* getelementptr([23 x i8], [23 x i8]* @.DIVIDE_BY_ZERO.str, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
@var_6 = constant [28 x i8] c"X should be 1, but you got:\00"
@var_17 = constant [35 x i8] c"Y should be -4 (x-5), but you got:\00"
@var_28 = constant [17 x i8] c"fucking loser...\00"
@var_29 = constant [9 x i8] c"I'M DONE\00"
define void @main() {
%var_0 = alloca i32, i32 50
%var_1 = add i32 0, 4
%var_2 = add i32 0, 3
%var_3 = sub i32 %var_1, %var_2
%var_5 = getelementptr i32, i32* %var_0, i32 0
store i32 %var_3, i32* %var_5
%var_6.ptr = getelementptr[28 x i8], [28 x i8]* @var_6, i32 0, i32 0
call void @print_string(i8* %var_6.ptr)
br label %label_9
label_9:
%var_7 = getelementptr i32, i32* %var_0, i32 0
%var_8 = load i32,  i32* %var_7
call void @printi_int(i32 %var_8)
br label %label_14
label_14:
%var_10 = getelementptr i32, i32* %var_0, i32 0
%var_11 = load i32,  i32* %var_10
%var_13 = add i32 0, 5
%var_14 = sub i32 %var_11, %var_13
%var_16 = getelementptr i32, i32* %var_0, i32 1
store i32 %var_14, i32* %var_16
%var_17.ptr = getelementptr[35 x i8], [35 x i8]* @var_17, i32 0, i32 0
call void @print_string(i8* %var_17.ptr)
br label %label_24
label_24:
%var_18 = getelementptr i32, i32* %var_0, i32 1
%var_19 = load i32,  i32* %var_18
call void @printi_int(i32 %var_19)
br label %label_29
label_29:
%var_21 = getelementptr i32, i32* %var_0, i32 1
%var_22 = load i32,  i32* %var_21
%var_24 = add i32 0, 0
%var_25 = add i32 0, 4
%var_26 = sub i32 %var_24, %var_25
%var_27 = icmp ne i32 %var_22, %var_26
br i1 %var_27, label %label_38, label %label_45
br label %label_38
label_38:
%var_28.ptr = getelementptr[17 x i8], [17 x i8]* @var_28, i32 0, i32 0
call void @print_string(i8* %var_28.ptr)
br label %label_42
label_42:
br label %label_51
br label %label_45
label_45:
%var_29.ptr = getelementptr[9 x i8], [9 x i8]* @var_29, i32 0, i32 0
call void @print_string(i8* %var_29.ptr)
br label %label_49
label_49:
br label %label_51
label_51:
ret void
}
