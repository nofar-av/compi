@.intFormat = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @print_string(i8*) {
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0), i8* %0)
ret void
}
define void @printi_int(i32) {
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0), i32 %0)
ret void
}
define void @check_div_error(i32) {
%valid = icmp eq i32 %0, 0
br i1 %valid, label %ILLEGAL, label %LEGAL
ILLEGAL:
call void @print_string(i8* getelementptr([23 x i8], [23 x i8]* @.DIVIDE_BY_ZERO.str, i32 0, i32 0))
call void @exit(i32 0)
ret void
LEGAL:
ret void
}
@var_43 = constant [30 x i8] c"Should be seeing 90 (I think)\00"
@var_48 = constant [29 x i8] c"Should be seeing 8 (I think)\00"
define void @soGood() {
%var_0 = alloca i32, i32 50
ret void
ret void
ret void
ret void
ret void
ret void
}
define i32 @nest1_int_int_int(i32, i32, i32) {
%var_1 = alloca i32, i32 50
%var_2 = add i32 %0, %1
%var_3 = add i32 %var_2, %2
ret i32 %var_3
ret i32 0
}
define i8 @nest2_int_int(i32, i32) {
%var_4 = alloca i32, i32 50
%var_6 = getelementptr i32, i32* %var_4, i32 0
store i32 0, i32* %var_6
%var_7 = trunc i32 %0 to i8
%var_8 = trunc i32 %1 to i8
%var_9 = add i8 %var_7, %var_8
%var_10 = zext i8 %var_9 to i32
%var_11 = getelementptr i32, i32* %var_4, i32 0
store i32 %var_10, i32* %var_11
%var_12 = getelementptr i32, i32* %var_4, i32 0
%var_13 = load i32,  i32* %var_12
%var_14 = trunc i32 %var_13 to i8
%var_15 = getelementptr i32, i32* %var_4, i32 0
%var_16 = load i32,  i32* %var_15
%var_17 = trunc i32 %var_16 to i8
%var_18 = getelementptr i32, i32* %var_4, i32 0
%var_19 = load i32,  i32* %var_18
%var_20 = trunc i32 %var_19 to i8
%var_21 = zext i8 %var_14 to i32
%var_22 = zext i8 %var_17 to i32
%var_23 = zext i8 %var_20 to i32
%var_24 = call i32 @nest1_int_int_int(i32 %var_21, i32 %var_22, i32 %var_23)
%var_25 = trunc i32 %var_24 to i8
ret i8 %var_25
ret i8 0
}
define i8 @nest3_byte_byte(i8, i8) {
%var_26 = alloca i32, i32 50
%var_27 = add i32 0, 2
call void @check_div_error(i32 %var_27)
%var_29 = zext i8 %0 to i32
%var_28 = sdiv i32 %var_29, %var_27
%var_30 = add i32 0, 3
call void @check_div_error(i32 %var_30)
%var_32 = zext i8 %1 to i32
%var_31 = sdiv i32 %var_32, %var_30
%var_33 = call i8 @nest2_int_int(i32 %var_28, i32 %var_31)
%var_34 = add i32 0, 2
call void @check_div_error(i32 %var_34)
%var_36 = zext i8 %1 to i32
%var_35 = sdiv i32 %var_36, %var_34
%var_37 = add i32 0, 3
call void @check_div_error(i32 %var_37)
%var_39 = zext i8 %0 to i32
%var_38 = sdiv i32 %var_39, %var_37
%var_40 = call i8 @nest2_int_int(i32 %var_35, i32 %var_38)
%var_41 = add i8 %var_33, %var_40
ret i8 %var_41
ret i8 0
}
define void @main() {
%var_42 = alloca i32, i32 50
%var_43.ptr = getelementptr[30 x i8], [30 x i8]* @var_43, i32 0, i32 0
call void @print_string(i8* %var_43.ptr)
br label %label_71
label_71:
%var_44 = add i8 0, 6
%var_45 = add i8 0, 30
%var_46 = call i8 @nest3_byte_byte(i8 %var_44, i8 %var_45)
%var_47 = zext i8 %var_46 to i32
call void @printi_int(i32 %var_47)
br label %label_78
label_78:
%var_48.ptr = getelementptr[29 x i8], [29 x i8]* @var_48, i32 0, i32 0
call void @print_string(i8* %var_48.ptr)
br label %label_82
label_82:
%var_49 = add i8 0, 71
%var_50 = add i8 0, 37
%var_51 = call i8 @nest3_byte_byte(i8 %var_49, i8 %var_50)
%var_52 = zext i8 %var_51 to i32
call void @printi_int(i32 %var_52)
br label %label_89
label_89:
ret void
}
