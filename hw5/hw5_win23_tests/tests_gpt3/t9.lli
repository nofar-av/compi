@.intFormat = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @print_string(i8*) {
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0), i8* %0)
ret void
}
define void @printi_int(i32) {
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0), i32 %0)
ret void
}
@var_15 = constant [3 x i8] c"ok\00"
define i1 @f() {
%var_0 = alloca i32, i32 50
br label %TRUE_LIST_label_3
br label %TRUE_LIST_label_3
TRUE_LIST_label_3:
br label %NEXT_LIST_label_3
FALSE_LIST_label_3:
br label %NEXT_LIST_label_3
NEXT_LIST_label_3:
%var_1 = phi i1 [ 1, %TRUE_LIST_label_3], [0, %FALSE_LIST_label_3]
ret i1 %var_1
ret i1 0
}
define void @main() {
%var_2 = alloca i32, i32 50
%var_3 = call i1 @f()
%var_4 = icmp ne i1 0, %var_3
br i1 %var_4 , label %TRUE_LIST_label_18, label %FALSE_LIST_label_18
br label %TRUE_LIST_label_18
TRUE_LIST_label_18:
br label %NEXT_LIST_label_18
FALSE_LIST_label_18:
br label %NEXT_LIST_label_18
NEXT_LIST_label_18:
%var_5 = phi i1 [ 1, %TRUE_LIST_label_18], [0, %FALSE_LIST_label_18]
%var_6 = zext i1 %var_5 to i32
%var_7 = getelementptr i32, i32* %var_2, i32 0
store i32 %var_6, i32* %var_7
%var_8 = getelementptr i32, i32* %var_2, i32 0
%var_9 = load i32,  i32* %var_8
%var_10 = trunc i32 %var_9 to i1
%var_11 = icmp ne i1 0, %var_10
br i1 %var_11, label %label_33, label %label_42
br label %label_33
label_33:
%var_12 = add i32 0, 5
%var_14 = getelementptr i32, i32* %var_2, i32 1
store i32 %var_12, i32* %var_14
%var_15.ptr = getelementptr[3 x i8], [3 x i8]* @var_15, i32 0, i32 0
call void @print_string(i8* %var_15.ptr)
br label %label_40
label_40:
br label %label_42
label_42:
ret void
}
