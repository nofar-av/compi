@.intFormat = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @print_string(i8*) {
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0), i8* %0)
ret void
}
define void @printi_int(i32) {
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0), i32 %0)
ret void
}
define void @foo_byte(i8) {
%var_0 = alloca i32, i32 50
%var_1 = add i32 0, 33
%var_3 = zext i8 %0 to i32
%var_2 = add i32 %var_3, %var_1
call void @printi_int(i32 %var_2)
br label %label_6
label_6:
ret void
}
define void @main() {
%var_4 = alloca i32, i32 50
%var_5 = add i8 0, 99
%var_6 = zext i8 %var_5 to i32
%var_7 = getelementptr i32, i32* %var_4, i32 0
store i32 %var_6, i32* %var_7
%var_8 = getelementptr i32, i32* %var_4, i32 0
%var_9 = load i32,  i32* %var_8
%var_10 = trunc i32 %var_9 to i8
%var_11 = add i32 0, 1
%var_13 = zext i8 %var_10 to i32
%var_12 = add i32 %var_13, %var_11
%var_15 = getelementptr i32, i32* %var_4, i32 1
store i32 %var_12, i32* %var_15
%var_16 = getelementptr i32, i32* %var_4, i32 1
%var_17 = load i32,  i32* %var_16
call void @foo_byte(i8 %var_17)
br label %label_27
label_27:
ret void
}
