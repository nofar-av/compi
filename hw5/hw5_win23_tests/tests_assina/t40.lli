@.intFormat = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @print_string(i8*) {
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0), i8* %0)
ret void
}
define void @printi_int(i32) {
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0), i32 %0)
ret void
}
@var_9 = constant [23 x i8] c"this is recursion test\00"
@var_10 = constant [33 x i8] c"we will calculate factorial num:\00"
@var_23 = constant [34 x i8] c"factorial(2) should be 2. actual:\00"
@var_27 = constant [37 x i8] c"factorial(7) should be 5040. actual:\00"
@var_31 = constant [34 x i8] c"factorial(0) should be 1. actual:\00"
@var_35 = constant [8 x i8] c"OK bye!\00"
define i32 @factorial_int(i32) {
%var_0 = alloca i32, i32 50
%var_1 = add i32 0, 1
%var_2 = icmp sle i32 %0, %var_1
br i1 %var_2, label %label_5, label %label_9
br label %label_5
label_5:
%var_3 = add i32 0, 1
ret i32 %var_3
br label %label_9
label_9:
%var_4 = add i32 0, 1
%var_5 = sub i32 %0, %var_4
%var_6 = call i32 @factorial_int(i32 %var_5)
%var_7 = mul i32 %var_6, %0
ret i32 %var_7
ret i32 0
}
define void @main() {
%var_8 = alloca i32, i32 50
%var_9.ptr = getelementptr[23 x i8], [23 x i8]* @var_9, i32 0, i32 0
call void @print_string(i8* %var_9.ptr)
br label %label_22
label_22:
%var_10.ptr = getelementptr[33 x i8], [33 x i8]* @var_10, i32 0, i32 0
call void @print_string(i8* %var_10.ptr)
br label %label_26
label_26:
%var_11 = add i32 0, 2
%var_12 = call i32 @factorial_int(i32 %var_11)
%var_14 = getelementptr i32, i32* %var_8, i32 0
store i32 %var_12, i32* %var_14
%var_15 = add i32 0, 7
%var_16 = call i32 @factorial_int(i32 %var_15)
%var_18 = getelementptr i32, i32* %var_8, i32 1
store i32 %var_16, i32* %var_18
%var_19 = add i32 0, 0
%var_20 = call i32 @factorial_int(i32 %var_19)
%var_22 = getelementptr i32, i32* %var_8, i32 2
store i32 %var_20, i32* %var_22
%var_23.ptr = getelementptr[34 x i8], [34 x i8]* @var_23, i32 0, i32 0
call void @print_string(i8* %var_23.ptr)
br label %label_42
label_42:
%var_24 = getelementptr i32, i32* %var_8, i32 0
%var_25 = load i32,  i32* %var_24
call void @printi_int(i32 %var_25)
br label %label_47
label_47:
%var_27.ptr = getelementptr[37 x i8], [37 x i8]* @var_27, i32 0, i32 0
call void @print_string(i8* %var_27.ptr)
br label %label_51
label_51:
%var_28 = getelementptr i32, i32* %var_8, i32 1
%var_29 = load i32,  i32* %var_28
call void @printi_int(i32 %var_29)
br label %label_56
label_56:
%var_31.ptr = getelementptr[34 x i8], [34 x i8]* @var_31, i32 0, i32 0
call void @print_string(i8* %var_31.ptr)
br label %label_60
label_60:
%var_32 = getelementptr i32, i32* %var_8, i32 2
%var_33 = load i32,  i32* %var_32
call void @printi_int(i32 %var_33)
br label %label_65
label_65:
%var_35.ptr = getelementptr[8 x i8], [8 x i8]* @var_35, i32 0, i32 0
call void @print_string(i8* %var_35.ptr)
br label %label_69
label_69:
ret void
}
