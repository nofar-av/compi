@.intFormat = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @print_string(i8*) {
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0), i8* %0)
ret void
}
define void @printi_int(i32) {
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0), i32 %0)
ret void
}
@var_2 = constant [2 x i8] c"a\00"
@var_4 = constant [2 x i8] c"b\00"
@var_6 = constant [2 x i8] c"c\00"
@var_8 = constant [2 x i8] c"d\00"
define void @Func_bool_bool_bool_bool(i1, i1, i1, i1) {
%var_0 = alloca i32, i32 50
%var_1 = icmp ne i1 0, %0
br i1 %var_1, label %label_4, label %label_10
br label %label_4
label_4:
%var_2.ptr = getelementptr[2 x i8], [2 x i8]* @var_2, i32 0, i32 0
call void @print_string(i8* %var_2.ptr)
br label %label_8
label_8:
br label %label_10
label_10:
%var_3 = icmp ne i1 0, %1
br i1 %var_3, label %label_14, label %label_20
br label %label_14
label_14:
%var_4.ptr = getelementptr[2 x i8], [2 x i8]* @var_4, i32 0, i32 0
call void @print_string(i8* %var_4.ptr)
br label %label_18
label_18:
br label %label_20
label_20:
%var_5 = icmp ne i1 0, %2
br i1 %var_5, label %label_24, label %label_30
br label %label_24
label_24:
%var_6.ptr = getelementptr[2 x i8], [2 x i8]* @var_6, i32 0, i32 0
call void @print_string(i8* %var_6.ptr)
br label %label_28
label_28:
br label %label_30
label_30:
%var_7 = icmp ne i1 0, %3
br i1 %var_7, label %label_34, label %label_40
br label %label_34
label_34:
%var_8.ptr = getelementptr[2 x i8], [2 x i8]* @var_8, i32 0, i32 0
call void @print_string(i8* %var_8.ptr)
br label %label_38
label_38:
br label %label_40
label_40:
ret void
}
define void @maxTestsTestMultipleBooleans() {
%var_9 = alloca i32, i32 50
br label %TRUE_LIST_label_47
br label %TRUE_LIST_label_47
TRUE_LIST_label_47:
br label %NEXT_LIST_label_47
FALSE_LIST_label_47:
br label %NEXT_LIST_label_47
NEXT_LIST_label_47:
%var_10 = phi i1 [ 1, %TRUE_LIST_label_47], [0, %FALSE_LIST_label_47]
br label %FALSE_LIST_label_55
br label %TRUE_LIST_label_55
TRUE_LIST_label_55:
br label %NEXT_LIST_label_55
FALSE_LIST_label_55:
br label %NEXT_LIST_label_55
NEXT_LIST_label_55:
%var_11 = phi i1 [ 1, %TRUE_LIST_label_55], [0, %FALSE_LIST_label_55]
br label %TRUE_LIST_label_63
br label %TRUE_LIST_label_63
TRUE_LIST_label_63:
br label %NEXT_LIST_label_63
FALSE_LIST_label_63:
br label %NEXT_LIST_label_63
NEXT_LIST_label_63:
%var_12 = phi i1 [ 1, %TRUE_LIST_label_63], [0, %FALSE_LIST_label_63]
br label %FALSE_LIST_label_71
br label %TRUE_LIST_label_71
TRUE_LIST_label_71:
br label %NEXT_LIST_label_71
FALSE_LIST_label_71:
br label %NEXT_LIST_label_71
NEXT_LIST_label_71:
%var_13 = phi i1 [ 1, %TRUE_LIST_label_71], [0, %FALSE_LIST_label_71]
call void @Func_bool_bool_bool_bool(i1 %var_10, i1 %var_11, i1 %var_12, i1 %var_13)
br label %label_79
label_79:
ret void
}
define void @main() {
%var_14 = alloca i32, i32 50
call void @maxTestsTestMultipleBooleans()
br label %label_86
label_86:
ret void
}
