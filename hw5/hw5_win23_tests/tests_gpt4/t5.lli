@.intFormat = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @print_string(i8*) {
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0), i8* %0)
ret void
}
define void @printi_int(i32) {
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0), i32 %0)
ret void
}
define void @maxTestsDefineThenAssign() {
%var_0 = alloca i32, i32 50
%var_2 = getelementptr i32, i32* %var_0, i32 0
store i32 0, i32* %var_2
%var_3 = add i32 0, 5
%var_5 = getelementptr i32, i32* %var_0, i32 0
store i32 %var_3, i32* %var_5
%var_6 = getelementptr i32, i32* %var_0, i32 0
%var_7 = load i32,  i32* %var_6
call void @printi_int(i32 %var_7)
br label %label_10
label_10:
%var_9 = add i32 0, 7
%var_11 = getelementptr i32, i32* %var_0, i32 0
store i32 %var_9, i32* %var_11
%var_12 = getelementptr i32, i32* %var_0, i32 0
%var_13 = load i32,  i32* %var_12
call void @printi_int(i32 %var_13)
br label %label_18
label_18:
ret void
}
define void @main() {
%var_15 = alloca i32, i32 50
call void @maxTestsDefineThenAssign()
br label %label_25
label_25:
ret void
}
