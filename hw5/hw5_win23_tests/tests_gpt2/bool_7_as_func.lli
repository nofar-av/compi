@.intFormat = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @print_string(i8*) {
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0), i8* %0)
ret void
}
define void @printi_int(i32) {
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0), i32 %0)
ret void
}
@var_2 = constant [15 x i8] c"var is true :)\00"
@var_3 = constant [16 x i8] c"var is false :(\00"
define i1 @funBool_bool(i1) {
%var_0 = alloca i32, i32 50
%var_1 = icmp ne i1 0, %0
br i1 %var_1, label %label_4, label %label_11
br label %label_4
label_4:
%var_2.ptr = getelementptr[15 x i8], [15 x i8]* @var_2, i32 0, i32 0
call void @print_string(i8* %var_2.ptr)
br label %label_8
label_8:
br label %label_17
br label %label_11
label_11:
%var_3.ptr = getelementptr[16 x i8], [16 x i8]* @var_3, i32 0, i32 0
call void @print_string(i8* %var_3.ptr)
br label %label_15
label_15:
br label %label_17
label_17:
ret i1 0
}
define void @main() {
%var_4 = alloca i32, i32 50
br label %TRUE_LIST_label_24
br label %TRUE_LIST_label_24
TRUE_LIST_label_24:
br label %NEXT_LIST_label_24
FALSE_LIST_label_24:
br label %NEXT_LIST_label_24
NEXT_LIST_label_24:
%var_5 = phi i1 [ 1, %TRUE_LIST_label_24], [0, %FALSE_LIST_label_24]
%var_6 = zext i1 %var_5 to i32
%var_7 = getelementptr i32, i32* %var_4, i32 0
store i32 %var_6, i32* %var_7
br label %FALSE_LIST_label_35
br label %TRUE_LIST_label_35
TRUE_LIST_label_35:
br label %NEXT_LIST_label_35
FALSE_LIST_label_35:
br label %NEXT_LIST_label_35
NEXT_LIST_label_35:
%var_8 = phi i1 [ 1, %TRUE_LIST_label_35], [0, %FALSE_LIST_label_35]
%var_9 = zext i1 %var_8 to i32
%var_10 = getelementptr i32, i32* %var_4, i32 1
store i32 %var_9, i32* %var_10
%var_11 = getelementptr i32, i32* %var_4, i32 1
%var_12 = load i32,  i32* %var_11
%var_13 = trunc i32 %var_12 to i1
%var_14 = icmp ne i1 0, %var_13
br i1 %var_14, label %TRUE_LIST_label_50, label %FALSE_LIST_label_50
br label %TRUE_LIST_label_50
TRUE_LIST_label_50:
br label %NEXT_LIST_label_50
FALSE_LIST_label_50:
br label %NEXT_LIST_label_50
NEXT_LIST_label_50:
%var_15 = phi i1 [ 1, %TRUE_LIST_label_50], [0, %FALSE_LIST_label_50]
%var_16 = call i1 @funBool_bool(i1 %var_15)
%var_17 = icmp ne i1 0, %var_16
br i1 %var_17 , label %label_60, label %label_60
br label %label_60
label_60:
ret void
}
