@.intFormat = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @print_string(i8*) {
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0), i8* %0)
ret void
}
define void @printi_int(i32) {
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0), i32 %0)
ret void
}
define i32 @safedivgt_int_int_int(i32, i32, i32) {
%var_0 = alloca i32, i32 50
%var_1 = add i32 0, 0
%var_2 = icmp ne i32 %1, %var_1
br i1 %var_2, label %label_5, label %label_14
br label %label_5
label_5:
%var_3 = sdiv i32 %0, %1
%var_4 = icmp sgt i32 %var_3, %2
br i1 %var_4, label %label_10, label %label_14
br label %label_10
label_10:
%var_5 = add i32 0, 1
ret i32 %var_5
br label %label_14
label_14:
%var_6 = add i32 0, 0
ret i32 %var_6
ret i32 0
}
define void @main() {
%var_7 = alloca i32, i32 50
%var_8 = add i32 0, 120
%var_9 = add i32 0, 4
%var_10 = add i32 0, 28
%var_11 = call i32 @safedivgt_int_int_int(i32 %var_8, i32 %var_9, i32 %var_10)
call void @printi_int(i32 %var_11)
br label %label_27
label_27:
%var_12 = add i32 0, 120
%var_13 = add i32 0, 4
%var_14 = add i32 0, 32
%var_15 = call i32 @safedivgt_int_int_int(i32 %var_12, i32 %var_13, i32 %var_14)
call void @printi_int(i32 %var_15)
br label %label_34
label_34:
%var_16 = add i32 0, 120
%var_17 = add i32 0, 0
%var_18 = add i32 0, 32
%var_19 = call i32 @safedivgt_int_int_int(i32 %var_16, i32 %var_17, i32 %var_18)
call void @printi_int(i32 %var_19)
br label %label_41
label_41:
%var_20 = add i32 0, 120
%var_21 = add i32 0, 1
%var_22 = add i32 0, 32
%var_23 = call i32 @safedivgt_int_int_int(i32 %var_20, i32 %var_21, i32 %var_22)
call void @printi_int(i32 %var_23)
br label %label_48
label_48:
ret void
}
