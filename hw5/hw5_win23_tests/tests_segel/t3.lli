@.intFormat = internal constant [4 x i8] c"%d\0A\00"
@.DIVIDE_BY_ZERO.str = internal constant [23 x i8] c"Error division by zero\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @print_string(i8*) {
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0), i8* %0)
ret void
}
define void @printi_int(i32) {
%format_ptr = getelementptr [4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* getelementptr([4 x i8], [4 x i8]* @.intFormat, i32 0, i32 0), i32 %0)
ret void
}
define void @main() {
%var_0 = alloca i32, i32 50
%var_1 = add i32 0, 5
%var_3 = getelementptr i32, i32* %var_0, i32 0
store i32 %var_1, i32* %var_3
%var_4 = getelementptr i32, i32* %var_0, i32 0
%var_5 = load i32,  i32* %var_4
%var_7 = add i32 0, 3
%var_8 = add i32 %var_5, %var_7
%var_10 = getelementptr i32, i32* %var_0, i32 1
store i32 %var_8, i32* %var_10
%var_11 = getelementptr i32, i32* %var_0, i32 1
%var_12 = load i32,  i32* %var_11
%var_14 = add i32 0, 3
%var_15 = add i32 %var_12, %var_14
%var_17 = getelementptr i32, i32* %var_0, i32 2
store i32 %var_15, i32* %var_17
%var_18 = getelementptr i32, i32* %var_0, i32 0
%var_19 = load i32,  i32* %var_18
call void @printi_int(i32 %var_19)
br label %label_20
label_20:
%var_21 = getelementptr i32, i32* %var_0, i32 1
%var_22 = load i32,  i32* %var_21
call void @printi_int(i32 %var_22)
br label %label_25
label_25:
%var_24 = getelementptr i32, i32* %var_0, i32 2
%var_25 = load i32,  i32* %var_24
call void @printi_int(i32 %var_25)
br label %label_30
label_30:
ret void
}
