State 57 conflicts: 4 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: Funcs

    2 Funcs: %empty
    3      | FuncDecl Funcs

    4 FuncDecl: OverRide RetType ID LPAREN Formals RPAREN LBRACE Statements RBRACE

    5 OverRide: %empty
    6         | OVERRIDE

    7 RetType: Type
    8        | VOID

    9 Formals: %empty
   10        | FormalsList

   11 FormalsList: FormalDecl
   12            | FormalDecl COMMA FormalsList

   13 FormalDecl: Type ID

   14 Statements: Statement
   15           | Statements Statement

   16 Statement: LBRACE Statements RBRACE
   17          | Type ID SC
   18          | Type ID ASSIGN Exp SC
   19          | ID ASSIGN Exp SC
   20          | Call SC
   21          | RETURN SC
   22          | RETURN Exp SC
   23          | IF LPAREN Exp RPAREN Statement
   24          | IF LPAREN Exp RPAREN Statement ELSE Statement
   25          | WHILE LPAREN Exp RPAREN Statement
   26          | BREAK SC
   27          | CONTINUE SC

   28 Call: ID LPAREN ExpList RPAREN
   29     | ID LPAREN RPAREN

   30 ExpList: Exp
   31        | Exp COMMA ExpList

   32 Type: INT
   33     | BYTE
   34     | BOOL

   35 Exp: LPAREN Exp RPAREN
   36    | Exp BINOP Exp
   37    | ID
   38    | Call
   39    | NUM
   40    | NUM B
   41    | STRING
   42    | TRUE
   43    | FALSE
   44    | NOT Exp
   45    | Exp AND Exp
   46    | Exp OR Exp
   47    | Exp RELOP Exp
   48    | LPAREN Type RPAREN Exp


Terminals, with rules where they appear

$end (0) 0
error (256)
VOID (258) 8
INT (259) 32
BYTE (260) 33
B (261) 40
BOOL (262) 34
OVERRIDE (263) 6
NOT (264) 44
TRUE (265) 42
FALSE (266) 43
RETURN (267) 21 22
IF (268) 23 24
WHILE (269) 25
BREAK (270) 26
CONTINUE (271) 27
SC (272) 17 18 19 20 21 22 26 27
COMMA (273) 12 31
ID (274) 4 13 17 18 19 28 29 37
NUM (275) 39 40
STRING (276) 41
ASSIGN (277) 18 19
OR (278) 46
AND (279) 45
RELOP (280) 47
BINOP (281) 36
LPAREN (282) 4 23 24 25 28 29 35 48
LBRACE (283) 4 16
RPAREN (284) 4 23 24 25 28 29 35 48
RBRACE (285) 4 16
ELSE (286) 24


Nonterminals, with rules where they appear

$accept (32)
    on left: 0
Program (33)
    on left: 1, on right: 0
Funcs (34)
    on left: 2 3, on right: 1 3
FuncDecl (35)
    on left: 4, on right: 3
OverRide (36)
    on left: 5 6, on right: 4
RetType (37)
    on left: 7 8, on right: 4
Formals (38)
    on left: 9 10, on right: 4
FormalsList (39)
    on left: 11 12, on right: 10 12
FormalDecl (40)
    on left: 13, on right: 11 12
Statements (41)
    on left: 14 15, on right: 4 15 16
Statement (42)
    on left: 16 17 18 19 20 21 22 23 24 25 26 27, on right: 14 15 23
    24 25
Call (43)
    on left: 28 29, on right: 20 38
ExpList (44)
    on left: 30 31, on right: 28 31
Type (45)
    on left: 32 33 34, on right: 7 13 17 18 48
Exp (46)
    on left: 35 36 37 38 39 40 41 42 43 44 45 46 47 48, on right: 18
    19 22 23 24 25 30 31 35 36 44 45 46 47 48


State 0

    0 $accept: . Program $end

    OVERRIDE  shift, and go to state 1

    $end      reduce using rule 2 (Funcs)
    $default  reduce using rule 5 (OverRide)

    Program   go to state 2
    Funcs     go to state 3
    FuncDecl  go to state 4
    OverRide  go to state 5


State 1

    6 OverRide: OVERRIDE .

    $default  reduce using rule 6 (OverRide)


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 6


State 3

    1 Program: Funcs .

    $default  reduce using rule 1 (Program)


State 4

    3 Funcs: FuncDecl . Funcs

    OVERRIDE  shift, and go to state 1

    $end      reduce using rule 2 (Funcs)
    $default  reduce using rule 5 (OverRide)

    Funcs     go to state 7
    FuncDecl  go to state 4
    OverRide  go to state 5


State 5

    4 FuncDecl: OverRide . RetType ID LPAREN Formals RPAREN LBRACE Statements RBRACE

    VOID  shift, and go to state 8
    INT   shift, and go to state 9
    BYTE  shift, and go to state 10
    BOOL  shift, and go to state 11

    RetType  go to state 12
    Type     go to state 13


State 6

    0 $accept: Program $end .

    $default  accept


State 7

    3 Funcs: FuncDecl Funcs .

    $default  reduce using rule 3 (Funcs)


State 8

    8 RetType: VOID .

    $default  reduce using rule 8 (RetType)


State 9

   32 Type: INT .

    $default  reduce using rule 32 (Type)


State 10

   33 Type: BYTE .

    $default  reduce using rule 33 (Type)


State 11

   34 Type: BOOL .

    $default  reduce using rule 34 (Type)


State 12

    4 FuncDecl: OverRide RetType . ID LPAREN Formals RPAREN LBRACE Statements RBRACE

    ID  shift, and go to state 14


State 13

    7 RetType: Type .

    $default  reduce using rule 7 (RetType)


State 14

    4 FuncDecl: OverRide RetType ID . LPAREN Formals RPAREN LBRACE Statements RBRACE

    LPAREN  shift, and go to state 15


State 15

    4 FuncDecl: OverRide RetType ID LPAREN . Formals RPAREN LBRACE Statements RBRACE

    INT   shift, and go to state 9
    BYTE  shift, and go to state 10
    BOOL  shift, and go to state 11

    $default  reduce using rule 9 (Formals)

    Formals      go to state 16
    FormalsList  go to state 17
    FormalDecl   go to state 18
    Type         go to state 19


State 16

    4 FuncDecl: OverRide RetType ID LPAREN Formals . RPAREN LBRACE Statements RBRACE

    RPAREN  shift, and go to state 20


State 17

   10 Formals: FormalsList .

    $default  reduce using rule 10 (Formals)


State 18

   11 FormalsList: FormalDecl .
   12            | FormalDecl . COMMA FormalsList

    COMMA  shift, and go to state 21

    $default  reduce using rule 11 (FormalsList)


State 19

   13 FormalDecl: Type . ID

    ID  shift, and go to state 22


State 20

    4 FuncDecl: OverRide RetType ID LPAREN Formals RPAREN . LBRACE Statements RBRACE

    LBRACE  shift, and go to state 23


State 21

   12 FormalsList: FormalDecl COMMA . FormalsList

    INT   shift, and go to state 9
    BYTE  shift, and go to state 10
    BOOL  shift, and go to state 11

    FormalsList  go to state 24
    FormalDecl   go to state 18
    Type         go to state 19


State 22

   13 FormalDecl: Type ID .

    $default  reduce using rule 13 (FormalDecl)


State 23

    4 FuncDecl: OverRide RetType ID LPAREN Formals RPAREN LBRACE . Statements RBRACE

    INT       shift, and go to state 9
    BYTE      shift, and go to state 10
    BOOL      shift, and go to state 11
    RETURN    shift, and go to state 25
    IF        shift, and go to state 26
    WHILE     shift, and go to state 27
    BREAK     shift, and go to state 28
    CONTINUE  shift, and go to state 29
    ID        shift, and go to state 30
    LBRACE    shift, and go to state 31

    Statements  go to state 32
    Statement   go to state 33
    Call        go to state 34
    Type        go to state 35


State 24

   12 FormalsList: FormalDecl COMMA FormalsList .

    $default  reduce using rule 12 (FormalsList)


State 25

   21 Statement: RETURN . SC
   22          | RETURN . Exp SC

    NOT     shift, and go to state 36
    TRUE    shift, and go to state 37
    FALSE   shift, and go to state 38
    SC      shift, and go to state 39
    ID      shift, and go to state 40
    NUM     shift, and go to state 41
    STRING  shift, and go to state 42
    LPAREN  shift, and go to state 43

    Call  go to state 44
    Exp   go to state 45


State 26

   23 Statement: IF . LPAREN Exp RPAREN Statement
   24          | IF . LPAREN Exp RPAREN Statement ELSE Statement

    LPAREN  shift, and go to state 46


State 27

   25 Statement: WHILE . LPAREN Exp RPAREN Statement

    LPAREN  shift, and go to state 47


State 28

   26 Statement: BREAK . SC

    SC  shift, and go to state 48


State 29

   27 Statement: CONTINUE . SC

    SC  shift, and go to state 49


State 30

   19 Statement: ID . ASSIGN Exp SC
   28 Call: ID . LPAREN ExpList RPAREN
   29     | ID . LPAREN RPAREN

    ASSIGN  shift, and go to state 50
    LPAREN  shift, and go to state 51


State 31

   16 Statement: LBRACE . Statements RBRACE

    INT       shift, and go to state 9
    BYTE      shift, and go to state 10
    BOOL      shift, and go to state 11
    RETURN    shift, and go to state 25
    IF        shift, and go to state 26
    WHILE     shift, and go to state 27
    BREAK     shift, and go to state 28
    CONTINUE  shift, and go to state 29
    ID        shift, and go to state 30
    LBRACE    shift, and go to state 31

    Statements  go to state 52
    Statement   go to state 33
    Call        go to state 34
    Type        go to state 35


State 32

    4 FuncDecl: OverRide RetType ID LPAREN Formals RPAREN LBRACE Statements . RBRACE
   15 Statements: Statements . Statement

    INT       shift, and go to state 9
    BYTE      shift, and go to state 10
    BOOL      shift, and go to state 11
    RETURN    shift, and go to state 25
    IF        shift, and go to state 26
    WHILE     shift, and go to state 27
    BREAK     shift, and go to state 28
    CONTINUE  shift, and go to state 29
    ID        shift, and go to state 30
    LBRACE    shift, and go to state 31
    RBRACE    shift, and go to state 53

    Statement  go to state 54
    Call       go to state 34
    Type       go to state 35


State 33

   14 Statements: Statement .

    $default  reduce using rule 14 (Statements)


State 34

   20 Statement: Call . SC

    SC  shift, and go to state 55


State 35

   17 Statement: Type . ID SC
   18          | Type . ID ASSIGN Exp SC

    ID  shift, and go to state 56


State 36

   44 Exp: NOT . Exp

    NOT     shift, and go to state 36
    TRUE    shift, and go to state 37
    FALSE   shift, and go to state 38
    ID      shift, and go to state 40
    NUM     shift, and go to state 41
    STRING  shift, and go to state 42
    LPAREN  shift, and go to state 43

    Call  go to state 44
    Exp   go to state 57


State 37

   42 Exp: TRUE .

    $default  reduce using rule 42 (Exp)


State 38

   43 Exp: FALSE .

    $default  reduce using rule 43 (Exp)


State 39

   21 Statement: RETURN SC .

    $default  reduce using rule 21 (Statement)


State 40

   28 Call: ID . LPAREN ExpList RPAREN
   29     | ID . LPAREN RPAREN
   37 Exp: ID .

    LPAREN  shift, and go to state 51

    $default  reduce using rule 37 (Exp)


State 41

   39 Exp: NUM .
   40    | NUM . B

    B  shift, and go to state 58

    $default  reduce using rule 39 (Exp)


State 42

   41 Exp: STRING .

    $default  reduce using rule 41 (Exp)


State 43

   35 Exp: LPAREN . Exp RPAREN
   48    | LPAREN . Type RPAREN Exp

    INT     shift, and go to state 9
    BYTE    shift, and go to state 10
    BOOL    shift, and go to state 11
    NOT     shift, and go to state 36
    TRUE    shift, and go to state 37
    FALSE   shift, and go to state 38
    ID      shift, and go to state 40
    NUM     shift, and go to state 41
    STRING  shift, and go to state 42
    LPAREN  shift, and go to state 43

    Call  go to state 44
    Type  go to state 59
    Exp   go to state 60


State 44

   38 Exp: Call .

    $default  reduce using rule 38 (Exp)


State 45

   22 Statement: RETURN Exp . SC
   36 Exp: Exp . BINOP Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . RELOP Exp

    SC     shift, and go to state 61
    OR     shift, and go to state 62
    AND    shift, and go to state 63
    RELOP  shift, and go to state 64
    BINOP  shift, and go to state 65


State 46

   23 Statement: IF LPAREN . Exp RPAREN Statement
   24          | IF LPAREN . Exp RPAREN Statement ELSE Statement

    NOT     shift, and go to state 36
    TRUE    shift, and go to state 37
    FALSE   shift, and go to state 38
    ID      shift, and go to state 40
    NUM     shift, and go to state 41
    STRING  shift, and go to state 42
    LPAREN  shift, and go to state 43

    Call  go to state 44
    Exp   go to state 66


State 47

   25 Statement: WHILE LPAREN . Exp RPAREN Statement

    NOT     shift, and go to state 36
    TRUE    shift, and go to state 37
    FALSE   shift, and go to state 38
    ID      shift, and go to state 40
    NUM     shift, and go to state 41
    STRING  shift, and go to state 42
    LPAREN  shift, and go to state 43

    Call  go to state 44
    Exp   go to state 67


State 48

   26 Statement: BREAK SC .

    $default  reduce using rule 26 (Statement)


State 49

   27 Statement: CONTINUE SC .

    $default  reduce using rule 27 (Statement)


State 50

   19 Statement: ID ASSIGN . Exp SC

    NOT     shift, and go to state 36
    TRUE    shift, and go to state 37
    FALSE   shift, and go to state 38
    ID      shift, and go to state 40
    NUM     shift, and go to state 41
    STRING  shift, and go to state 42
    LPAREN  shift, and go to state 43

    Call  go to state 44
    Exp   go to state 68


State 51

   28 Call: ID LPAREN . ExpList RPAREN
   29     | ID LPAREN . RPAREN

    NOT     shift, and go to state 36
    TRUE    shift, and go to state 37
    FALSE   shift, and go to state 38
    ID      shift, and go to state 40
    NUM     shift, and go to state 41
    STRING  shift, and go to state 42
    LPAREN  shift, and go to state 43
    RPAREN  shift, and go to state 69

    Call     go to state 44
    ExpList  go to state 70
    Exp      go to state 71


State 52

   15 Statements: Statements . Statement
   16 Statement: LBRACE Statements . RBRACE

    INT       shift, and go to state 9
    BYTE      shift, and go to state 10
    BOOL      shift, and go to state 11
    RETURN    shift, and go to state 25
    IF        shift, and go to state 26
    WHILE     shift, and go to state 27
    BREAK     shift, and go to state 28
    CONTINUE  shift, and go to state 29
    ID        shift, and go to state 30
    LBRACE    shift, and go to state 31
    RBRACE    shift, and go to state 72

    Statement  go to state 54
    Call       go to state 34
    Type       go to state 35


State 53

    4 FuncDecl: OverRide RetType ID LPAREN Formals RPAREN LBRACE Statements RBRACE .

    $default  reduce using rule 4 (FuncDecl)


State 54

   15 Statements: Statements Statement .

    $default  reduce using rule 15 (Statements)


State 55

   20 Statement: Call SC .

    $default  reduce using rule 20 (Statement)


State 56

   17 Statement: Type ID . SC
   18          | Type ID . ASSIGN Exp SC

    SC      shift, and go to state 73
    ASSIGN  shift, and go to state 74


State 57

   36 Exp: Exp . BINOP Exp
   44    | NOT Exp .
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . RELOP Exp

    OR     shift, and go to state 62
    AND    shift, and go to state 63
    RELOP  shift, and go to state 64
    BINOP  shift, and go to state 65

    OR        [reduce using rule 44 (Exp)]
    AND       [reduce using rule 44 (Exp)]
    RELOP     [reduce using rule 44 (Exp)]
    BINOP     [reduce using rule 44 (Exp)]
    $default  reduce using rule 44 (Exp)


State 58

   40 Exp: NUM B .

    $default  reduce using rule 40 (Exp)


State 59

   48 Exp: LPAREN Type . RPAREN Exp

    RPAREN  shift, and go to state 75


State 60

   35 Exp: LPAREN Exp . RPAREN
   36    | Exp . BINOP Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . RELOP Exp

    OR      shift, and go to state 62
    AND     shift, and go to state 63
    RELOP   shift, and go to state 64
    BINOP   shift, and go to state 65
    RPAREN  shift, and go to state 76


State 61

   22 Statement: RETURN Exp SC .

    $default  reduce using rule 22 (Statement)


State 62

   46 Exp: Exp OR . Exp

    NOT     shift, and go to state 36
    TRUE    shift, and go to state 37
    FALSE   shift, and go to state 38
    ID      shift, and go to state 40
    NUM     shift, and go to state 41
    STRING  shift, and go to state 42
    LPAREN  shift, and go to state 43

    Call  go to state 44
    Exp   go to state 77


State 63

   45 Exp: Exp AND . Exp

    NOT     shift, and go to state 36
    TRUE    shift, and go to state 37
    FALSE   shift, and go to state 38
    ID      shift, and go to state 40
    NUM     shift, and go to state 41
    STRING  shift, and go to state 42
    LPAREN  shift, and go to state 43

    Call  go to state 44
    Exp   go to state 78


State 64

   47 Exp: Exp RELOP . Exp

    NOT     shift, and go to state 36
    TRUE    shift, and go to state 37
    FALSE   shift, and go to state 38
    ID      shift, and go to state 40
    NUM     shift, and go to state 41
    STRING  shift, and go to state 42
    LPAREN  shift, and go to state 43

    Call  go to state 44
    Exp   go to state 79


State 65

   36 Exp: Exp BINOP . Exp

    NOT     shift, and go to state 36
    TRUE    shift, and go to state 37
    FALSE   shift, and go to state 38
    ID      shift, and go to state 40
    NUM     shift, and go to state 41
    STRING  shift, and go to state 42
    LPAREN  shift, and go to state 43

    Call  go to state 44
    Exp   go to state 80


State 66

   23 Statement: IF LPAREN Exp . RPAREN Statement
   24          | IF LPAREN Exp . RPAREN Statement ELSE Statement
   36 Exp: Exp . BINOP Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . RELOP Exp

    OR      shift, and go to state 62
    AND     shift, and go to state 63
    RELOP   shift, and go to state 64
    BINOP   shift, and go to state 65
    RPAREN  shift, and go to state 81


State 67

   25 Statement: WHILE LPAREN Exp . RPAREN Statement
   36 Exp: Exp . BINOP Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . RELOP Exp

    OR      shift, and go to state 62
    AND     shift, and go to state 63
    RELOP   shift, and go to state 64
    BINOP   shift, and go to state 65
    RPAREN  shift, and go to state 82


State 68

   19 Statement: ID ASSIGN Exp . SC
   36 Exp: Exp . BINOP Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . RELOP Exp

    SC     shift, and go to state 83
    OR     shift, and go to state 62
    AND    shift, and go to state 63
    RELOP  shift, and go to state 64
    BINOP  shift, and go to state 65


State 69

   29 Call: ID LPAREN RPAREN .

    $default  reduce using rule 29 (Call)


State 70

   28 Call: ID LPAREN ExpList . RPAREN

    RPAREN  shift, and go to state 84


State 71

   30 ExpList: Exp .
   31        | Exp . COMMA ExpList
   36 Exp: Exp . BINOP Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . RELOP Exp

    COMMA  shift, and go to state 85
    OR     shift, and go to state 62
    AND    shift, and go to state 63
    RELOP  shift, and go to state 64
    BINOP  shift, and go to state 65

    $default  reduce using rule 30 (ExpList)


State 72

   16 Statement: LBRACE Statements RBRACE .

    $default  reduce using rule 16 (Statement)


State 73

   17 Statement: Type ID SC .

    $default  reduce using rule 17 (Statement)


State 74

   18 Statement: Type ID ASSIGN . Exp SC

    NOT     shift, and go to state 36
    TRUE    shift, and go to state 37
    FALSE   shift, and go to state 38
    ID      shift, and go to state 40
    NUM     shift, and go to state 41
    STRING  shift, and go to state 42
    LPAREN  shift, and go to state 43

    Call  go to state 44
    Exp   go to state 86


State 75

   48 Exp: LPAREN Type RPAREN . Exp

    NOT     shift, and go to state 36
    TRUE    shift, and go to state 37
    FALSE   shift, and go to state 38
    ID      shift, and go to state 40
    NUM     shift, and go to state 41
    STRING  shift, and go to state 42
    LPAREN  shift, and go to state 43

    Call  go to state 44
    Exp   go to state 87


State 76

   35 Exp: LPAREN Exp RPAREN .

    $default  reduce using rule 35 (Exp)


State 77

   36 Exp: Exp . BINOP Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   46    | Exp OR Exp .
   47    | Exp . RELOP Exp

    AND    shift, and go to state 63
    RELOP  shift, and go to state 64
    BINOP  shift, and go to state 65

    $default  reduce using rule 46 (Exp)


State 78

   36 Exp: Exp . BINOP Exp
   45    | Exp . AND Exp
   45    | Exp AND Exp .
   46    | Exp . OR Exp
   47    | Exp . RELOP Exp

    RELOP  shift, and go to state 64
    BINOP  shift, and go to state 65

    $default  reduce using rule 45 (Exp)


State 79

   36 Exp: Exp . BINOP Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . RELOP Exp
   47    | Exp RELOP Exp .

    BINOP  shift, and go to state 65

    $default  reduce using rule 47 (Exp)


State 80

   36 Exp: Exp . BINOP Exp
   36    | Exp BINOP Exp .
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . RELOP Exp

    $default  reduce using rule 36 (Exp)


State 81

   23 Statement: IF LPAREN Exp RPAREN . Statement
   24          | IF LPAREN Exp RPAREN . Statement ELSE Statement

    INT       shift, and go to state 9
    BYTE      shift, and go to state 10
    BOOL      shift, and go to state 11
    RETURN    shift, and go to state 25
    IF        shift, and go to state 26
    WHILE     shift, and go to state 27
    BREAK     shift, and go to state 28
    CONTINUE  shift, and go to state 29
    ID        shift, and go to state 30
    LBRACE    shift, and go to state 31

    Statement  go to state 88
    Call       go to state 34
    Type       go to state 35


State 82

   25 Statement: WHILE LPAREN Exp RPAREN . Statement

    INT       shift, and go to state 9
    BYTE      shift, and go to state 10
    BOOL      shift, and go to state 11
    RETURN    shift, and go to state 25
    IF        shift, and go to state 26
    WHILE     shift, and go to state 27
    BREAK     shift, and go to state 28
    CONTINUE  shift, and go to state 29
    ID        shift, and go to state 30
    LBRACE    shift, and go to state 31

    Statement  go to state 89
    Call       go to state 34
    Type       go to state 35


State 83

   19 Statement: ID ASSIGN Exp SC .

    $default  reduce using rule 19 (Statement)


State 84

   28 Call: ID LPAREN ExpList RPAREN .

    $default  reduce using rule 28 (Call)


State 85

   31 ExpList: Exp COMMA . ExpList

    NOT     shift, and go to state 36
    TRUE    shift, and go to state 37
    FALSE   shift, and go to state 38
    ID      shift, and go to state 40
    NUM     shift, and go to state 41
    STRING  shift, and go to state 42
    LPAREN  shift, and go to state 43

    Call     go to state 44
    ExpList  go to state 90
    Exp      go to state 71


State 86

   18 Statement: Type ID ASSIGN Exp . SC
   36 Exp: Exp . BINOP Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . RELOP Exp

    SC     shift, and go to state 91
    OR     shift, and go to state 62
    AND    shift, and go to state 63
    RELOP  shift, and go to state 64
    BINOP  shift, and go to state 65


State 87

   36 Exp: Exp . BINOP Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . RELOP Exp
   48    | LPAREN Type RPAREN Exp .

    $default  reduce using rule 48 (Exp)


State 88

   23 Statement: IF LPAREN Exp RPAREN Statement .
   24          | IF LPAREN Exp RPAREN Statement . ELSE Statement

    ELSE  shift, and go to state 92

    $default  reduce using rule 23 (Statement)


State 89

   25 Statement: WHILE LPAREN Exp RPAREN Statement .

    $default  reduce using rule 25 (Statement)


State 90

   31 ExpList: Exp COMMA ExpList .

    $default  reduce using rule 31 (ExpList)


State 91

   18 Statement: Type ID ASSIGN Exp SC .

    $default  reduce using rule 18 (Statement)


State 92

   24 Statement: IF LPAREN Exp RPAREN Statement ELSE . Statement

    INT       shift, and go to state 9
    BYTE      shift, and go to state 10
    BOOL      shift, and go to state 11
    RETURN    shift, and go to state 25
    IF        shift, and go to state 26
    WHILE     shift, and go to state 27
    BREAK     shift, and go to state 28
    CONTINUE  shift, and go to state 29
    ID        shift, and go to state 30
    LBRACE    shift, and go to state 31

    Statement  go to state 93
    Call       go to state 34
    Type       go to state 35


State 93

   24 Statement: IF LPAREN Exp RPAREN Statement ELSE Statement .

    $default  reduce using rule 24 (Statement)
